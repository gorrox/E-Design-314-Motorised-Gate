   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.comm	_ir_rxMessage,2,2
  28                             		.comm	_dataReady,1,1
  29                             		.comm	_dataPrint,1,1
  30                             		.comm	_dataResponse,1,1
  31                             		.comm	_ADC_done,1,1
  32                             		.comm	_ADC_value,8,2
  33                             		.comm	_INTAD_FSM_state,1,1
  34                             		.comm	_adc_ready,1,1
  35                             		.comm	_latest_current_reading,1,1
  36                             		.comm	_ADC_counter,1,1
  37                             		.comm	_timer_adc_reader_10Hz_interrupt,1,1
  38                             		.comm	_initial_current,1,1
  39                             		.comm	_collision_det_counter,1,1
  40                             		.comm	_collision_det,1,1
  41                             		.comm	_gate_status,2,2
  42                             		.comm	_mode,1,1
  43                             		.comm	_GS_PREV_STATE,1,1
  44                             		.comm	_uart1RxBuf,16,1
  45                             		.comm	_uart1RxCnt,2,2
  46                             		.comm	_uart1RxFlag,1,1
  47                             		.comm	_uart1RxErrFlag,1,1
  48                             		.comm	_uart1RxOvrFlag,1,1
  49                             		.comm	_uart1TxBuf,16,1
  50                             		.comm	_uart1TxCnt,2,2
  51                             		.comm	_uart1TxFlag,1,1
  52                             		.comm	_time_now,7,1
  53                             		.comm	_uart1Status,2,2
  54                             		.comm	_myBuffer,16,1
  55                             		.comm	_myCounter,2,2
  56                             		.comm	_pwm_counter,2,2
  57                             		.comm	_pwm_edge,1,1
  58                             		.comm	_switch_edge,1,1
  59                             		.comm	_check_btns,1,1
  60                             		.comm	_gate_cmd,1,1
  61                             		.comm	_auto_close,1,1
  62                             		.comm	_auto_close_cntr,1,1
  63                             		.global	_r_tau0_channel0_interrupt
  65                             	_r_tau0_channel0_interrupt:
  66                             	.LFB0:
  67                             		.file 1 "../src/r_cg_timer_user.c"
   1:../src/r_cg_timer_user.c **** /**************************************************************************************************
   2:../src/r_cg_timer_user.c **** * DISCLAIMER
   3:../src/r_cg_timer_user.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_timer_user.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_timer_user.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_timer_user.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_timer_user.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_timer_user.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_timer_user.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_timer_user.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_timer_user.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_timer_user.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_timer_user.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_timer_user.c **** * following link:
  15:../src/r_cg_timer_user.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_timer_user.c **** *
  17:../src/r_cg_timer_user.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_timer_user.c **** ***************************************************************************************************
  19:../src/r_cg_timer_user.c **** 
  20:../src/r_cg_timer_user.c **** /**************************************************************************************************
  21:../src/r_cg_timer_user.c **** * File Name    : r_cg_timer_user.c
  22:../src/r_cg_timer_user.c **** * Version      : CodeGenerator for RL78/G14 V2.04.02.01 [15 May 2015]
  23:../src/r_cg_timer_user.c **** * Device(s)    : R5F104LE
  24:../src/r_cg_timer_user.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_timer_user.c **** * Description  : This file implements device driver for TAU module.
  26:../src/r_cg_timer_user.c **** * Creation Date: 5/4/2016
  27:../src/r_cg_timer_user.c **** ***************************************************************************************************
  28:../src/r_cg_timer_user.c **** 
  29:../src/r_cg_timer_user.c **** /**************************************************************************************************
  30:../src/r_cg_timer_user.c **** Includes
  31:../src/r_cg_timer_user.c **** ***************************************************************************************************
  32:../src/r_cg_timer_user.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_timer_user.c **** #include "r_cg_timer.h"
  34:../src/r_cg_timer_user.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_timer_user.c **** #include "global.h"
  36:../src/r_cg_timer_user.c **** /* End user code. Do not edit comment generated here */
  37:../src/r_cg_timer_user.c **** #include "r_cg_userdefine.h"
  38:../src/r_cg_timer_user.c **** 
  39:../src/r_cg_timer_user.c **** /**************************************************************************************************
  40:../src/r_cg_timer_user.c **** Global variables and functions
  41:../src/r_cg_timer_user.c **** ***************************************************************************************************
  42:../src/r_cg_timer_user.c **** /* Start user code for global. Do not edit comment generated here */
  43:../src/r_cg_timer_user.c **** 
  44:../src/r_cg_timer_user.c **** /* End user code. Do not edit comment generated here */
  45:../src/r_cg_timer_user.c **** 
  46:../src/r_cg_timer_user.c **** /**************************************************************************************************
  47:../src/r_cg_timer_user.c **** * Function Name: r_tau0_channel0_interrupt
  48:../src/r_cg_timer_user.c **** * Description  : This function is INTTM00 interrupt service routine.
  49:../src/r_cg_timer_user.c **** * Arguments    : None
  50:../src/r_cg_timer_user.c **** * Return Value : None
  51:../src/r_cg_timer_user.c **** ***************************************************************************************************
  52:../src/r_cg_timer_user.c **** void r_tau0_channel0_interrupt(void)
  53:../src/r_cg_timer_user.c **** {
  68                             		.loc 1 53 0
  69                             		; start of function
  70                             		; push 8: ax bc de hl
  71 0000 61 CF                   		sel	rb0
  72 0002 C1                      		push	ax
  73                             	.LCFI0:
  74 0003 C3                      		push	bc
  75                             	.LCFI1:
  76 0004 C5                      		push	de
  77                             	.LCFI2:
  78 0005 C7                      		push	hl
  79                             	.LCFI3:
  54:../src/r_cg_timer_user.c ****     /* Start user code. Do not edit comment generated here */
  55:../src/r_cg_timer_user.c ****     /* End user code. Do not edit comment generated here */
  56:../src/r_cg_timer_user.c **** }
  80                             		.loc 1 56 0
  81 0006 C6                      		pop	hl
  82 0007 C4                      		pop	de
  83 0008 C2                      		pop	bc
  84 0009 C0                      		pop	ax
  85 000a 61 FC                   		reti
  86                             	.LFE0:
  88                             		.global	_r_tau0_channel1_interrupt
  90                             	_r_tau0_channel1_interrupt:
  91                             	.LFB1:
  57:../src/r_cg_timer_user.c **** 
  58:../src/r_cg_timer_user.c **** /**************************************************************************************************
  59:../src/r_cg_timer_user.c **** * Function Name: r_tau0_channel1_interrupt
  60:../src/r_cg_timer_user.c **** * Description  : This function is INTTM01 interrupt service routine.
  61:../src/r_cg_timer_user.c **** * Arguments    : None
  62:../src/r_cg_timer_user.c **** * Return Value : None
  63:../src/r_cg_timer_user.c **** ***************************************************************************************************
  64:../src/r_cg_timer_user.c **** void r_tau0_channel1_interrupt(void)
  65:../src/r_cg_timer_user.c **** {
  92                             		.loc 1 65 0
  93                             		; start of function
  94                             		; push 10: ax bc de hl r8
  95 000c 61 CF                   		sel	rb0
  96 000e C1                      		push	ax
  97                             	.LCFI4:
  98 000f C3                      		push	bc
  99                             	.LCFI5:
 100 0010 C5                      		push	de
 101                             	.LCFI6:
 102 0011 C7                      		push	hl
 103                             	.LCFI7:
 104 0012 61 DF                   		sel	rb1
 105 0014 C1                      		push	ax ; r8
 106                             	.LCFI8:
 107 0015 61 CF                   		sel	rb0
  66:../src/r_cg_timer_user.c ****     /* Start user code. Do not edit comment generated here */
  67:../src/r_cg_timer_user.c **** 	switch_edge = 1;
 108                             		.loc 1 67 0
 109 0017 E5 00 00                		oneb	!_switch_edge
  68:../src/r_cg_timer_user.c **** 	check_btns = 1;
 110                             		.loc 1 68 0
 111 001a E5 00 00                		oneb	!_check_btns
  69:../src/r_cg_timer_user.c **** 	ADC_counter++;
 112                             		.loc 1 69 0
 113 001d 8F 00 00                		mov	a, !_ADC_counter
 114 0020 9D F0                   		mov	r8, a
 115 0022 A4 F0                   		inc	r8
 116 0024 8D F0                   		mov	a, r8
 117 0026 9F 00 00                		mov	!_ADC_counter, a
  70:../src/r_cg_timer_user.c **** 	if (ADC_counter == 100)
 118                             		.loc 1 70 0
 119 0029 8F 00 00                		mov	a, !_ADC_counter
 120 002c 9D F0                   		mov	r8, a
 121 002e 4A F0 64                		cmp	r8, #100
 122 0031 61 E8                   		 skz
 123 0033 EC 3D 00 00             		 br	!!.L3
  71:../src/r_cg_timer_user.c **** 	{
  72:../src/r_cg_timer_user.c **** 		ADC_counter = 0;
 124                             		.loc 1 72 0
 125 0037 F5 00 00                		clrb	!_ADC_counter
  73:../src/r_cg_timer_user.c **** 		timer_adc_reader_10Hz_interrupt = 1;
 126                             		.loc 1 73 0
 127 003a E5 00 00                		oneb	!_timer_adc_reader_10Hz_interrupt
 128                             	.L3:
  74:../src/r_cg_timer_user.c **** 	}
  75:../src/r_cg_timer_user.c **** 
  76:../src/r_cg_timer_user.c **** 	if(auto_close)
 129                             		.loc 1 76 0
 130 003d 8F 00 00                		mov	a, !_auto_close
 131 0040 9D F0                   		mov	r8, a
 132 0042 D4 F0                   		cmp0	r8
 133 0044 61 F8                   		 sknz
 134 0046 EC 56 00 00             		 br	!!.L2
  77:../src/r_cg_timer_user.c **** 	{
  78:../src/r_cg_timer_user.c **** 		auto_close_cntr++;
 135                             		.loc 1 78 0
 136 004a 8F 00 00                		mov	a, !_auto_close_cntr
 137 004d 9D F0                   		mov	r8, a
 138 004f A4 F0                   		inc	r8
 139 0051 8D F0                   		mov	a, r8
 140 0053 9F 00 00                		mov	!_auto_close_cntr, a
 141                             	.L2:
  79:../src/r_cg_timer_user.c **** 		if (auto_close_cntr >= AUTO_CLOSE_DELAY)
  80:../src/r_cg_timer_user.c **** 		{
  81:../src/r_cg_timer_user.c **** 			auto_close_cntr = 0;
  82:../src/r_cg_timer_user.c **** 			closeGate();
  83:../src/r_cg_timer_user.c **** 			print_lcd("Auto close");
  84:../src/r_cg_timer_user.c **** 		}
  85:../src/r_cg_timer_user.c **** 	}
  86:../src/r_cg_timer_user.c **** 
  87:../src/r_cg_timer_user.c **** 	//if (gate_cmd) collision_det_counter++;
  88:../src/r_cg_timer_user.c **** 	//if (collision_det_counter == COLLISION_DET_DELAY)
  89:../src/r_cg_timer_user.c **** 	//{
  90:../src/r_cg_timer_user.c **** 		//collision_det_counter = 0;
  91:../src/r_cg_timer_user.c **** 		//collision_det = 1;
  92:../src/r_cg_timer_user.c **** 	//}
  93:../src/r_cg_timer_user.c ****     /* End user code. Do not edit comment generated here */
  94:../src/r_cg_timer_user.c **** }
 142                             		.loc 1 94 0
 143 0056 61 DF                   		sel	rb1
 144 0058 C0                      		pop	ax ; r8
 145 0059 61 CF                   		sel	rb0
 146 005b C6                      		pop	hl
 147 005c C4                      		pop	de
 148 005d C2                      		pop	bc
 149 005e C0                      		pop	ax
 150 005f 61 FC                   		reti
 151                             	.LFE1:
 153                             		.global	_r_tau0_channel2_interrupt
 155                             	_r_tau0_channel2_interrupt:
 156                             	.LFB2:
  95:../src/r_cg_timer_user.c **** 
  96:../src/r_cg_timer_user.c **** /**************************************************************************************************
  97:../src/r_cg_timer_user.c **** * Function Name: r_tau0_channel2_interrupt
  98:../src/r_cg_timer_user.c **** * Description  : This function is INTTM02 interrupt service routine.
  99:../src/r_cg_timer_user.c **** * Arguments    : None
 100:../src/r_cg_timer_user.c **** * Return Value : None
 101:../src/r_cg_timer_user.c **** ***************************************************************************************************
 102:../src/r_cg_timer_user.c **** void r_tau0_channel2_interrupt(void)
 103:../src/r_cg_timer_user.c **** {
 157                             		.loc 1 103 0
 158                             		; start of function
 159                             		; push 8: ax bc de hl
 160 0061 61 CF                   		sel	rb0
 161 0063 C1                      		push	ax
 162                             	.LCFI9:
 163 0064 C3                      		push	bc
 164                             	.LCFI10:
 165 0065 C5                      		push	de
 166                             	.LCFI11:
 167 0066 C7                      		push	hl
 168                             	.LCFI12:
 104:../src/r_cg_timer_user.c ****     /* Start user code. Do not edit comment generated here */
 105:../src/r_cg_timer_user.c **** 	pwm_edge = 1;
 169                             		.loc 1 105 0
 170 0067 E5 00 00                		oneb	!_pwm_edge
 106:../src/r_cg_timer_user.c ****     /* End user code. Do not edit comment generated here */
 107:../src/r_cg_timer_user.c **** }
 171                             		.loc 1 107 0
 172 006a C6                      		pop	hl
 173 006b C4                      		pop	de
 174 006c C2                      		pop	bc
 175 006d C0                      		pop	ax
 176 006e 61 FC                   		reti
 177                             	.LFE2:
 179                             		.global	_r_tau0_channel3_interrupt
 181                             	_r_tau0_channel3_interrupt:
 182                             	.LFB3:
 108:../src/r_cg_timer_user.c **** 
 109:../src/r_cg_timer_user.c **** /**************************************************************************************************
 110:../src/r_cg_timer_user.c **** * Function Name: r_tau0_channel3_interrupt
 111:../src/r_cg_timer_user.c **** * Description  : This function is INTTM03 interrupt service routine.
 112:../src/r_cg_timer_user.c **** * Arguments    : None
 113:../src/r_cg_timer_user.c **** * Return Value : None
 114:../src/r_cg_timer_user.c **** ***************************************************************************************************
 115:../src/r_cg_timer_user.c **** void r_tau0_channel3_interrupt(void)
 116:../src/r_cg_timer_user.c **** {
 183                             		.loc 1 116 0
 184                             		; start of function
 185                             		; push 16: ax bc de hl r8 r10 r12 r14
 186 0070 61 CF                   		sel	rb0
 187 0072 C1                      		push	ax
 188                             	.LCFI13:
 189 0073 C3                      		push	bc
 190                             	.LCFI14:
 191 0074 C5                      		push	de
 192                             	.LCFI15:
 193 0075 C7                      		push	hl
 194                             	.LCFI16:
 195 0076 61 DF                   		sel	rb1
 196 0078 C1                      		push	ax ; r8
 197                             	.LCFI17:
 198 0079 C3                      		push	bc ; r10
 199                             	.LCFI18:
 200 007a C5                      		push	de ; r12
 201                             	.LCFI19:
 202 007b C7                      		push	hl ; r14
 203                             	.LCFI20:
 204 007c 61 CF                   		sel	rb0
 117:../src/r_cg_timer_user.c ****     /* Start user code. Do not edit comment generated here */
 118:../src/r_cg_timer_user.c **** 	receive(); //IR receive
 205                             		.loc 1 118 0
 206 007e FC 00 00 00             		call	!!%code(_receive)
 119:../src/r_cg_timer_user.c **** 	P7 ^= 0x80;
 207                             		.loc 1 119 0
 208 0082 C9 F2 07 FF             		movw	r10, #-249
 209 0086 C9 F0 07 FF             		movw	r8, #-249
 210 008a AD F0                   		movw	ax, r8
 211 008c BD F4                   		movw	r12, ax
 212 008e FA F4                   		movw	hl, r12
 213 0090 8B                      		mov	a, [hl]
 214 0091 9D F0                   		mov	r8, a
 215 0093 7A F0 80                		xor	r8, #-128
 216 0096 AD F2                   		movw	ax, r10
 217 0098 BD F4                   		movw	r12, ax
 218 009a DA F4                   		movw	bc, r12
 219 009c 8D F0                   		mov	a, r8
 220 009e 48 00 00                		mov	[bc], a
 120:../src/r_cg_timer_user.c ****     /* End user code. Do not edit comment generated here */
 121:../src/r_cg_timer_user.c **** }
 221                             		.loc 1 121 0
 222 00a1 61 DF                   		sel	rb1
 223 00a3 C6                      		pop	hl ; r14
 224 00a4 C4                      		pop	de ; r12
 225 00a5 C2                      		pop	bc ; r10
 226 00a6 C0                      		pop	ax ; r8
 227 00a7 61 CF                   		sel	rb0
 228 00a9 C6                      		pop	hl
 229 00aa C4                      		pop	de
 230 00ab C2                      		pop	bc
 231 00ac C0                      		pop	ax
 232 00ad 61 FC                   		reti
 233                             	.LFE3:
 235                             		.global	_r_tmr_rd0_interrupt
 237                             	_r_tmr_rd0_interrupt:
 238                             	.LFB4:
 122:../src/r_cg_timer_user.c **** 
 123:../src/r_cg_timer_user.c **** /**************************************************************************************************
 124:../src/r_cg_timer_user.c **** * Function Name: r_tmr_rd0_interrupt
 125:../src/r_cg_timer_user.c **** * Description  : This function is INTTRD0 interrupt service routine.
 126:../src/r_cg_timer_user.c **** * Arguments    : None
 127:../src/r_cg_timer_user.c **** * Return Value : None
 128:../src/r_cg_timer_user.c **** ***************************************************************************************************
 129:../src/r_cg_timer_user.c **** void r_tmr_rd0_interrupt(void)
 130:../src/r_cg_timer_user.c **** {
 239                             		.loc 1 130 0
 240                             		; start of function
 241                             		; push 8: ax bc de hl
 242 00af 61 CF                   		sel	rb0
 243 00b1 C1                      		push	ax
 244                             	.LCFI21:
 245 00b2 C3                      		push	bc
 246                             	.LCFI22:
 247 00b3 C5                      		push	de
 248                             	.LCFI23:
 249 00b4 C7                      		push	hl
 250                             	.LCFI24:
 131:../src/r_cg_timer_user.c ****     /* Start user code. Do not edit comment generated here */
 132:../src/r_cg_timer_user.c ****     /* End user code. Do not edit comment generated here */
 133:../src/r_cg_timer_user.c **** }
 251                             		.loc 1 133 0
 252 00b5 C6                      		pop	hl
 253 00b6 C4                      		pop	de
 254 00b7 C2                      		pop	bc
 255 00b8 C0                      		pop	ax
 256 00b9 61 FC                   		reti
 257                             	.LFE4:
 417                             	.Letext0:
 418                             		.file 2 "../src/iodefine.h"
 419                             		.file 3 "../src/r_cg_macrodriver.h"
 420                             		.file 4 "../src/r_cg_rtc.h"
 421                             		.file 5 "../src/infrared.h"
 422                             		.file 6 "../src/adc.h"
 423                             		.file 7 "../src/global.h"
