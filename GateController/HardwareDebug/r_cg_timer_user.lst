   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.comm	_ir_rxMessage,2,2
  28                             		.comm	_dataReady,1,1
  29                             		.comm	_dataPrint,1,1
  30                             		.comm	_dataResponse,1,1
  31                             		.comm	_ADC_done,1,1
  32                             		.comm	_ADC_value,8,2
  33                             		.comm	_INTAD_FSM_state,1,1
  34                             		.comm	_adc_ready,1,1
  35                             		.comm	_latest_current_reading,1,1
  36                             		.comm	_ADC_counter,1,1
  37                             		.comm	_timer_adc_reader_10Hz_interrupt,1,1
  38                             		.comm	_initial_current,1,1
  39                             		.comm	_collision_det_counter,1,1
  40                             		.comm	_collision_det,1,1
  41                             		.comm	_ctrlMode,2,2
  42                             		.comm	_gate_status,2,2
  43                             		.comm	_prev_gate_status,2,2
  44                             		.comm	_time_now,7,1
  45                             		.comm	_uart1Status,2,2
  46                             		.comm	_uart1RxFlag,1,1
  47                             		.comm	_uart1RxBuf,16,1
  48                             		.comm	_uart1RxCnt,2,2
  49                             		.comm	_uart1TxFlag,1,1
  50                             		.comm	_uart1TxBuf,16,1
  51                             		.comm	_uart1TxCnt,2,2
  52                             		.comm	_myBuffer,16,1
  53                             		.comm	_myCounter,2,2
  54                             		.comm	_pwm_counter,2,2
  55                             		.comm	_pwm_edge,2,2
  56                             		.comm	_switch_edge,2,2
  57                             		.comm	_check_btns,2,2
  58                             		.comm	_gate_cmd,1,1
  59                             		.comm	_auto_close,1,1
  60                             		.comm	_auto_close_cntr,1,1
  61                             		.global	_r_tau0_channel0_interrupt
  63                             	_r_tau0_channel0_interrupt:
  64                             	.LFB0:
  65                             		.file 1 "../src/r_cg_timer_user.c"
   1:../src/r_cg_timer_user.c **** /**************************************************************************************************
   2:../src/r_cg_timer_user.c **** * DISCLAIMER
   3:../src/r_cg_timer_user.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_timer_user.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_timer_user.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_timer_user.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_timer_user.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_timer_user.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_timer_user.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_timer_user.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_timer_user.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_timer_user.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_timer_user.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_timer_user.c **** * following link:
  15:../src/r_cg_timer_user.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_timer_user.c **** *
  17:../src/r_cg_timer_user.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_timer_user.c **** ***************************************************************************************************
  19:../src/r_cg_timer_user.c **** 
  20:../src/r_cg_timer_user.c **** /**************************************************************************************************
  21:../src/r_cg_timer_user.c **** * File Name    : r_cg_timer_user.c
  22:../src/r_cg_timer_user.c **** * Version      : CodeGenerator for RL78/G14 V2.04.02.01 [15 May 2015]
  23:../src/r_cg_timer_user.c **** * Device(s)    : R5F104LE
  24:../src/r_cg_timer_user.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_timer_user.c **** * Description  : This file implements device driver for TAU module.
  26:../src/r_cg_timer_user.c **** * Creation Date: 5/4/2016
  27:../src/r_cg_timer_user.c **** ***************************************************************************************************
  28:../src/r_cg_timer_user.c **** 
  29:../src/r_cg_timer_user.c **** /**************************************************************************************************
  30:../src/r_cg_timer_user.c **** Includes
  31:../src/r_cg_timer_user.c **** ***************************************************************************************************
  32:../src/r_cg_timer_user.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_timer_user.c **** #include "r_cg_timer.h"
  34:../src/r_cg_timer_user.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_timer_user.c **** #include "global.h"
  36:../src/r_cg_timer_user.c **** /* End user code. Do not edit comment generated here */
  37:../src/r_cg_timer_user.c **** #include "r_cg_userdefine.h"
  38:../src/r_cg_timer_user.c **** 
  39:../src/r_cg_timer_user.c **** /**************************************************************************************************
  40:../src/r_cg_timer_user.c **** Global variables and functions
  41:../src/r_cg_timer_user.c **** ***************************************************************************************************
  42:../src/r_cg_timer_user.c **** /* Start user code for global. Do not edit comment generated here */
  43:../src/r_cg_timer_user.c **** 
  44:../src/r_cg_timer_user.c **** /* End user code. Do not edit comment generated here */
  45:../src/r_cg_timer_user.c **** 
  46:../src/r_cg_timer_user.c **** /**************************************************************************************************
  47:../src/r_cg_timer_user.c **** * Function Name: r_tau0_channel0_interrupt
  48:../src/r_cg_timer_user.c **** * Description  : This function is INTTM00 interrupt service routine.
  49:../src/r_cg_timer_user.c **** * Arguments    : None
  50:../src/r_cg_timer_user.c **** * Return Value : None
  51:../src/r_cg_timer_user.c **** ***************************************************************************************************
  52:../src/r_cg_timer_user.c **** void r_tau0_channel0_interrupt(void)
  53:../src/r_cg_timer_user.c **** {
  66                             		.loc 1 53 0
  67                             		; start of function
  68                             		; push 8: ax bc de hl
  69 0000 61 CF                   		sel	rb0
  70 0002 C1                      		push	ax
  71                             	.LCFI0:
  72 0003 C3                      		push	bc
  73                             	.LCFI1:
  74 0004 C5                      		push	de
  75                             	.LCFI2:
  76 0005 C7                      		push	hl
  77                             	.LCFI3:
  54:../src/r_cg_timer_user.c ****     /* Start user code. Do not edit comment generated here */
  55:../src/r_cg_timer_user.c ****     /* End user code. Do not edit comment generated here */
  56:../src/r_cg_timer_user.c **** }
  78                             		.loc 1 56 0
  79 0006 C6                      		pop	hl
  80 0007 C4                      		pop	de
  81 0008 C2                      		pop	bc
  82 0009 C0                      		pop	ax
  83 000a 61 FC                   		reti
  84                             	.LFE0:
  86                             		.global	_r_tau0_channel1_interrupt
  88                             	_r_tau0_channel1_interrupt:
  89                             	.LFB1:
  57:../src/r_cg_timer_user.c **** 
  58:../src/r_cg_timer_user.c **** /**************************************************************************************************
  59:../src/r_cg_timer_user.c **** * Function Name: r_tau0_channel1_interrupt
  60:../src/r_cg_timer_user.c **** * Description  : This function is INTTM01 interrupt service routine.
  61:../src/r_cg_timer_user.c **** * Arguments    : None
  62:../src/r_cg_timer_user.c **** * Return Value : None
  63:../src/r_cg_timer_user.c **** ***************************************************************************************************
  64:../src/r_cg_timer_user.c **** void r_tau0_channel1_interrupt(void)
  65:../src/r_cg_timer_user.c **** {
  90                             		.loc 1 65 0
  91                             		; start of function
  92                             		; push 10: ax bc de hl r8
  93 000c 61 CF                   		sel	rb0
  94 000e C1                      		push	ax
  95                             	.LCFI4:
  96 000f C3                      		push	bc
  97                             	.LCFI5:
  98 0010 C5                      		push	de
  99                             	.LCFI6:
 100 0011 C7                      		push	hl
 101                             	.LCFI7:
 102 0012 61 DF                   		sel	rb1
 103 0014 C1                      		push	ax ; r8
 104                             	.LCFI8:
 105 0015 61 CF                   		sel	rb0
  66:../src/r_cg_timer_user.c ****     /* Start user code. Do not edit comment generated here */
  67:../src/r_cg_timer_user.c **** 	switch_edge = 1;
 106                             		.loc 1 67 0
 107 0017 E6                      		onew	ax
 108 0018 BF 00 00                		movw	!_switch_edge, ax
  68:../src/r_cg_timer_user.c **** 	check_btns = 1;
 109                             		.loc 1 68 0
 110 001b E6                      		onew	ax
 111 001c BF 00 00                		movw	!_check_btns, ax
  69:../src/r_cg_timer_user.c **** 	ADC_counter++;
 112                             		.loc 1 69 0
 113 001f 8F 00 00                		mov	a, !_ADC_counter
 114 0022 9D F0                   		mov	r8, a
 115 0024 A4 F0                   		inc	r8
 116 0026 8D F0                   		mov	a, r8
 117 0028 9F 00 00                		mov	!_ADC_counter, a
  70:../src/r_cg_timer_user.c **** 	if (ADC_counter == 100)
 118                             		.loc 1 70 0
 119 002b 8F 00 00                		mov	a, !_ADC_counter
 120 002e 9D F0                   		mov	r8, a
 121 0030 4A F0 64                		cmp	r8, #100
 122 0033 61 E8                   		 skz
 123 0035 EC 3F 00 00             		 br	!!.L3
  71:../src/r_cg_timer_user.c **** 	{
  72:../src/r_cg_timer_user.c **** 		ADC_counter = 0;
 124                             		.loc 1 72 0
 125 0039 F5 00 00                		clrb	!_ADC_counter
  73:../src/r_cg_timer_user.c **** 		timer_adc_reader_10Hz_interrupt = 1;
 126                             		.loc 1 73 0
 127 003c E5 00 00                		oneb	!_timer_adc_reader_10Hz_interrupt
 128                             	.L3:
  74:../src/r_cg_timer_user.c **** 	}
  75:../src/r_cg_timer_user.c **** 
  76:../src/r_cg_timer_user.c **** 	if(auto_close)
 129                             		.loc 1 76 0
 130 003f 8F 00 00                		mov	a, !_auto_close
 131 0042 9D F0                   		mov	r8, a
 132 0044 D4 F0                   		cmp0	r8
 133 0046 61 F8                   		 sknz
 134 0048 EC 58 00 00             		 br	!!.L2
  77:../src/r_cg_timer_user.c **** 	{
  78:../src/r_cg_timer_user.c **** 		auto_close_cntr++;
 135                             		.loc 1 78 0
 136 004c 8F 00 00                		mov	a, !_auto_close_cntr
 137 004f 9D F0                   		mov	r8, a
 138 0051 A4 F0                   		inc	r8
 139 0053 8D F0                   		mov	a, r8
 140 0055 9F 00 00                		mov	!_auto_close_cntr, a
 141                             	.L2:
  79:../src/r_cg_timer_user.c **** 		if (auto_close_cntr >= AUTO_CLOSE_DELAY)
  80:../src/r_cg_timer_user.c **** 		{
  81:../src/r_cg_timer_user.c **** 			auto_close_cntr = 0;
  82:../src/r_cg_timer_user.c **** 			closeGate();
  83:../src/r_cg_timer_user.c **** 			print_lcd("Auto close");
  84:../src/r_cg_timer_user.c **** 		}
  85:../src/r_cg_timer_user.c **** 	}
  86:../src/r_cg_timer_user.c **** 
  87:../src/r_cg_timer_user.c **** 	//if (gate_cmd) collision_det_counter++;
  88:../src/r_cg_timer_user.c **** 	//if (collision_det_counter == COLLISION_DET_DELAY)
  89:../src/r_cg_timer_user.c **** 	//{
  90:../src/r_cg_timer_user.c **** 		//collision_det_counter = 0;
  91:../src/r_cg_timer_user.c **** 		//collision_det = 1;
  92:../src/r_cg_timer_user.c **** 	//}
  93:../src/r_cg_timer_user.c ****     /* End user code. Do not edit comment generated here */
  94:../src/r_cg_timer_user.c **** }
 142                             		.loc 1 94 0
 143 0058 61 DF                   		sel	rb1
 144 005a C0                      		pop	ax ; r8
 145 005b 61 CF                   		sel	rb0
 146 005d C6                      		pop	hl
 147 005e C4                      		pop	de
 148 005f C2                      		pop	bc
 149 0060 C0                      		pop	ax
 150 0061 61 FC                   		reti
 151                             	.LFE1:
 153                             		.global	_r_tau0_channel2_interrupt
 155                             	_r_tau0_channel2_interrupt:
 156                             	.LFB2:
  95:../src/r_cg_timer_user.c **** 
  96:../src/r_cg_timer_user.c **** /**************************************************************************************************
  97:../src/r_cg_timer_user.c **** * Function Name: r_tau0_channel2_interrupt
  98:../src/r_cg_timer_user.c **** * Description  : This function is INTTM02 interrupt service routine.
  99:../src/r_cg_timer_user.c **** * Arguments    : None
 100:../src/r_cg_timer_user.c **** * Return Value : None
 101:../src/r_cg_timer_user.c **** ***************************************************************************************************
 102:../src/r_cg_timer_user.c **** void r_tau0_channel2_interrupt(void)
 103:../src/r_cg_timer_user.c **** {
 157                             		.loc 1 103 0
 158                             		; start of function
 159                             		; push 8: ax bc de hl
 160 0063 61 CF                   		sel	rb0
 161 0065 C1                      		push	ax
 162                             	.LCFI9:
 163 0066 C3                      		push	bc
 164                             	.LCFI10:
 165 0067 C5                      		push	de
 166                             	.LCFI11:
 167 0068 C7                      		push	hl
 168                             	.LCFI12:
 104:../src/r_cg_timer_user.c ****     /* Start user code. Do not edit comment generated here */
 105:../src/r_cg_timer_user.c **** 	pwm_edge = 1;
 169                             		.loc 1 105 0
 170 0069 E6                      		onew	ax
 171 006a BF 00 00                		movw	!_pwm_edge, ax
 106:../src/r_cg_timer_user.c ****     /* End user code. Do not edit comment generated here */
 107:../src/r_cg_timer_user.c **** }
 172                             		.loc 1 107 0
 173 006d C6                      		pop	hl
 174 006e C4                      		pop	de
 175 006f C2                      		pop	bc
 176 0070 C0                      		pop	ax
 177 0071 61 FC                   		reti
 178                             	.LFE2:
 180                             		.global	_r_tau0_channel3_interrupt
 182                             	_r_tau0_channel3_interrupt:
 183                             	.LFB3:
 108:../src/r_cg_timer_user.c **** 
 109:../src/r_cg_timer_user.c **** /**************************************************************************************************
 110:../src/r_cg_timer_user.c **** * Function Name: r_tau0_channel3_interrupt
 111:../src/r_cg_timer_user.c **** * Description  : This function is INTTM03 interrupt service routine.
 112:../src/r_cg_timer_user.c **** * Arguments    : None
 113:../src/r_cg_timer_user.c **** * Return Value : None
 114:../src/r_cg_timer_user.c **** ***************************************************************************************************
 115:../src/r_cg_timer_user.c **** void r_tau0_channel3_interrupt(void)
 116:../src/r_cg_timer_user.c **** {
 184                             		.loc 1 116 0
 185                             		; start of function
 186                             		; push 16: ax bc de hl r8 r10 r12 r14
 187 0073 61 CF                   		sel	rb0
 188 0075 C1                      		push	ax
 189                             	.LCFI13:
 190 0076 C3                      		push	bc
 191                             	.LCFI14:
 192 0077 C5                      		push	de
 193                             	.LCFI15:
 194 0078 C7                      		push	hl
 195                             	.LCFI16:
 196 0079 61 DF                   		sel	rb1
 197 007b C1                      		push	ax ; r8
 198                             	.LCFI17:
 199 007c C3                      		push	bc ; r10
 200                             	.LCFI18:
 201 007d C5                      		push	de ; r12
 202                             	.LCFI19:
 203 007e C7                      		push	hl ; r14
 204                             	.LCFI20:
 205 007f 61 CF                   		sel	rb0
 117:../src/r_cg_timer_user.c ****     /* Start user code. Do not edit comment generated here */
 118:../src/r_cg_timer_user.c **** 	receive(); //IR receive
 206                             		.loc 1 118 0
 207 0081 FC 00 00 00             		call	!!%code(_receive)
 119:../src/r_cg_timer_user.c **** 	P7 ^= 0x80;
 208                             		.loc 1 119 0
 209 0085 C9 F2 07 FF             		movw	r10, #-249
 210 0089 C9 F0 07 FF             		movw	r8, #-249
 211 008d AD F0                   		movw	ax, r8
 212 008f BD F4                   		movw	r12, ax
 213 0091 FA F4                   		movw	hl, r12
 214 0093 8B                      		mov	a, [hl]
 215 0094 9D F0                   		mov	r8, a
 216 0096 7A F0 80                		xor	r8, #-128
 217 0099 AD F2                   		movw	ax, r10
 218 009b BD F4                   		movw	r12, ax
 219 009d DA F4                   		movw	bc, r12
 220 009f 8D F0                   		mov	a, r8
 221 00a1 48 00 00                		mov	[bc], a
 120:../src/r_cg_timer_user.c ****     /* End user code. Do not edit comment generated here */
 121:../src/r_cg_timer_user.c **** }
 222                             		.loc 1 121 0
 223 00a4 61 DF                   		sel	rb1
 224 00a6 C6                      		pop	hl ; r14
 225 00a7 C4                      		pop	de ; r12
 226 00a8 C2                      		pop	bc ; r10
 227 00a9 C0                      		pop	ax ; r8
 228 00aa 61 CF                   		sel	rb0
 229 00ac C6                      		pop	hl
 230 00ad C4                      		pop	de
 231 00ae C2                      		pop	bc
 232 00af C0                      		pop	ax
 233 00b0 61 FC                   		reti
 234                             	.LFE3:
 236                             		.global	_r_tmr_rd0_interrupt
 238                             	_r_tmr_rd0_interrupt:
 239                             	.LFB4:
 122:../src/r_cg_timer_user.c **** 
 123:../src/r_cg_timer_user.c **** /**************************************************************************************************
 124:../src/r_cg_timer_user.c **** * Function Name: r_tmr_rd0_interrupt
 125:../src/r_cg_timer_user.c **** * Description  : This function is INTTRD0 interrupt service routine.
 126:../src/r_cg_timer_user.c **** * Arguments    : None
 127:../src/r_cg_timer_user.c **** * Return Value : None
 128:../src/r_cg_timer_user.c **** ***************************************************************************************************
 129:../src/r_cg_timer_user.c **** void r_tmr_rd0_interrupt(void)
 130:../src/r_cg_timer_user.c **** {
 240                             		.loc 1 130 0
 241                             		; start of function
 242                             		; push 8: ax bc de hl
 243 00b2 61 CF                   		sel	rb0
 244 00b4 C1                      		push	ax
 245                             	.LCFI21:
 246 00b5 C3                      		push	bc
 247                             	.LCFI22:
 248 00b6 C5                      		push	de
 249                             	.LCFI23:
 250 00b7 C7                      		push	hl
 251                             	.LCFI24:
 131:../src/r_cg_timer_user.c ****     /* Start user code. Do not edit comment generated here */
 132:../src/r_cg_timer_user.c ****     /* End user code. Do not edit comment generated here */
 133:../src/r_cg_timer_user.c **** }
 252                             		.loc 1 133 0
 253 00b8 C6                      		pop	hl
 254 00b9 C4                      		pop	de
 255 00ba C2                      		pop	bc
 256 00bb C0                      		pop	ax
 257 00bc 61 FC                   		reti
 258                             	.LFE4:
 418                             	.Letext0:
 419                             		.file 2 "../src/iodefine.h"
 420                             		.file 3 "../src/r_cg_macrodriver.h"
 421                             		.file 4 "../src/r_cg_rtc.h"
 422                             		.file 5 "../src/global.h"
 423                             		.file 6 "../src/infrared.h"
 424                             		.file 7 "../src/adc.h"
