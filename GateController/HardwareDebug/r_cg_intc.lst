   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.comm	_gate_status,2,2
  28                             		.comm	_mode,2,2
  29                             		.comm	_uart1RxBuf,16,1
  30                             		.comm	_uart1RxCnt,2,2
  31                             		.comm	_uart1RxFlag,1,1
  32                             		.comm	_uart1RxErrFlag,1,1
  33                             		.comm	_uart1RxOvrFlag,1,1
  34                             		.comm	_uart1TxBuf,16,1
  35                             		.comm	_uart1TxCnt,2,2
  36                             		.comm	_uart1TxFlag,1,1
  37                             		.comm	_uart1Status,2,2
  38                             		.global	_R_INTC_Create
  40                             	_R_INTC_Create:
  41                             	.LFB0:
  42                             		.file 1 "../src/r_cg_intc.c"
   1:../src/r_cg_intc.c **** /**************************************************************************************************
   2:../src/r_cg_intc.c **** * DISCLAIMER
   3:../src/r_cg_intc.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_intc.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_intc.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_intc.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_intc.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_intc.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_intc.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_intc.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_intc.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_intc.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_intc.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_intc.c **** * following link:
  15:../src/r_cg_intc.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_intc.c **** *
  17:../src/r_cg_intc.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_intc.c **** ***************************************************************************************************
  19:../src/r_cg_intc.c **** 
  20:../src/r_cg_intc.c **** /**************************************************************************************************
  21:../src/r_cg_intc.c **** * File Name    : r_cg_intc.c
  22:../src/r_cg_intc.c **** * Version      : CodeGenerator for RL78/G14 V2.04.02.01 [15 May 2015]
  23:../src/r_cg_intc.c **** * Device(s)    : R5F104LE
  24:../src/r_cg_intc.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_intc.c **** * Description  : This file implements device driver for INTC module.
  26:../src/r_cg_intc.c **** * Creation Date: 4/13/2016
  27:../src/r_cg_intc.c **** ***************************************************************************************************
  28:../src/r_cg_intc.c **** 
  29:../src/r_cg_intc.c **** /**************************************************************************************************
  30:../src/r_cg_intc.c **** Includes
  31:../src/r_cg_intc.c **** ***************************************************************************************************
  32:../src/r_cg_intc.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_intc.c **** #include "r_cg_intc.h"
  34:../src/r_cg_intc.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_intc.c **** /* End user code. Do not edit comment generated here */
  36:../src/r_cg_intc.c **** #include "r_cg_userdefine.h"
  37:../src/r_cg_intc.c **** 
  38:../src/r_cg_intc.c **** /**************************************************************************************************
  39:../src/r_cg_intc.c **** Global variables and functions
  40:../src/r_cg_intc.c **** ***************************************************************************************************
  41:../src/r_cg_intc.c **** /* Start user code for global. Do not edit comment generated here */
  42:../src/r_cg_intc.c **** /* End user code. Do not edit comment generated here */
  43:../src/r_cg_intc.c **** 
  44:../src/r_cg_intc.c **** /**************************************************************************************************
  45:../src/r_cg_intc.c **** * Function Name: R_INTC_Create
  46:../src/r_cg_intc.c **** * Description  : This function initializes INTP module.
  47:../src/r_cg_intc.c **** * Arguments    : None
  48:../src/r_cg_intc.c **** * Return Value : None
  49:../src/r_cg_intc.c **** ***************************************************************************************************
  50:../src/r_cg_intc.c **** void R_INTC_Create(void)
  51:../src/r_cg_intc.c **** {
  43                             		.loc 1 51 0
  52:../src/r_cg_intc.c ****     PMK0 = 1U;    /* disable INTP0 operation */
  44                             		.loc 1 52 0
  45 0000 C9 F0 E4 FF             		movw	r8, #-28
  46 0004 AD F0                   		movw	ax, r8
  47 0006 BD F4                   		movw	r12, ax
  48 0008 FA F4                   		movw	hl, r12
  49 000a 8B                      		mov	a, [hl]
  50 000b 9D F2                   		mov	r10, a
  51 000d 6A F2 04                		or	r10, #4
  52 0010 AD F0                   		movw	ax, r8
  53 0012 DA F4                   		movw	bc, r12
  54 0014 8D F2                   		mov	a, r10
  55 0016 48 00 00                		mov	[bc], a
  53:../src/r_cg_intc.c ****     PIF0 = 0U;    /* clear INTP0 interrupt flag */
  56                             		.loc 1 53 0
  57 0019 C9 F0 E0 FF             		movw	r8, #-32
  58 001d AD F0                   		movw	ax, r8
  59 001f BD F4                   		movw	r12, ax
  60 0021 FA F4                   		movw	hl, r12
  61 0023 8B                      		mov	a, [hl]
  62 0024 9D F2                   		mov	r10, a
  63 0026 5A F2 FB                		and	r10, #-5
  64 0029 AD F0                   		movw	ax, r8
  65 002b DA F4                   		movw	bc, r12
  66 002d 8D F2                   		mov	a, r10
  67 002f 48 00 00                		mov	[bc], a
  54:../src/r_cg_intc.c ****     PMK1 = 1U;    /* disable INTP1 operation */
  68                             		.loc 1 54 0
  69 0032 C9 F0 E4 FF             		movw	r8, #-28
  70 0036 AD F0                   		movw	ax, r8
  71 0038 BD F4                   		movw	r12, ax
  72 003a FA F4                   		movw	hl, r12
  73 003c 8B                      		mov	a, [hl]
  74 003d 9D F2                   		mov	r10, a
  75 003f 6A F2 08                		or	r10, #8
  76 0042 AD F0                   		movw	ax, r8
  77 0044 DA F4                   		movw	bc, r12
  78 0046 8D F2                   		mov	a, r10
  79 0048 48 00 00                		mov	[bc], a
  55:../src/r_cg_intc.c ****     PIF1 = 0U;    /* clear INTP1 interrupt flag */
  80                             		.loc 1 55 0
  81 004b C9 F0 E0 FF             		movw	r8, #-32
  82 004f AD F0                   		movw	ax, r8
  83 0051 BD F4                   		movw	r12, ax
  84 0053 FA F4                   		movw	hl, r12
  85 0055 8B                      		mov	a, [hl]
  86 0056 9D F2                   		mov	r10, a
  87 0058 5A F2 F7                		and	r10, #-9
  88 005b AD F0                   		movw	ax, r8
  89 005d DA F4                   		movw	bc, r12
  90 005f 8D F2                   		mov	a, r10
  91 0061 48 00 00                		mov	[bc], a
  56:../src/r_cg_intc.c ****     PMK2 = 1U;    /* disable INTP2 operation */
  92                             		.loc 1 56 0
  93 0064 C9 F0 E4 FF             		movw	r8, #-28
  94 0068 AD F0                   		movw	ax, r8
  95 006a BD F4                   		movw	r12, ax
  96 006c FA F4                   		movw	hl, r12
  97 006e 8B                      		mov	a, [hl]
  98 006f 9D F2                   		mov	r10, a
  99 0071 6A F2 10                		or	r10, #16
 100 0074 AD F0                   		movw	ax, r8
 101 0076 DA F4                   		movw	bc, r12
 102 0078 8D F2                   		mov	a, r10
 103 007a 48 00 00                		mov	[bc], a
  57:../src/r_cg_intc.c ****     PIF2 = 0U;    /* clear INTP2 interrupt flag */
 104                             		.loc 1 57 0
 105 007d C9 F0 E0 FF             		movw	r8, #-32
 106 0081 AD F0                   		movw	ax, r8
 107 0083 BD F4                   		movw	r12, ax
 108 0085 FA F4                   		movw	hl, r12
 109 0087 8B                      		mov	a, [hl]
 110 0088 9D F2                   		mov	r10, a
 111 008a 5A F2 EF                		and	r10, #-17
 112 008d AD F0                   		movw	ax, r8
 113 008f DA F4                   		movw	bc, r12
 114 0091 8D F2                   		mov	a, r10
 115 0093 48 00 00                		mov	[bc], a
  58:../src/r_cg_intc.c ****     PMK3 = 1U;    /* disable INTP3 operation */
 116                             		.loc 1 58 0
 117 0096 C9 F0 E4 FF             		movw	r8, #-28
 118 009a AD F0                   		movw	ax, r8
 119 009c BD F4                   		movw	r12, ax
 120 009e FA F4                   		movw	hl, r12
 121 00a0 8B                      		mov	a, [hl]
 122 00a1 9D F2                   		mov	r10, a
 123 00a3 6A F2 20                		or	r10, #32
 124 00a6 AD F0                   		movw	ax, r8
 125 00a8 DA F4                   		movw	bc, r12
 126 00aa 8D F2                   		mov	a, r10
 127 00ac 48 00 00                		mov	[bc], a
  59:../src/r_cg_intc.c ****     PIF3 = 0U;    /* clear INTP3 interrupt flag */
 128                             		.loc 1 59 0
 129 00af C9 F0 E0 FF             		movw	r8, #-32
 130 00b3 AD F0                   		movw	ax, r8
 131 00b5 BD F4                   		movw	r12, ax
 132 00b7 FA F4                   		movw	hl, r12
 133 00b9 8B                      		mov	a, [hl]
 134 00ba 9D F2                   		mov	r10, a
 135 00bc 5A F2 DF                		and	r10, #-33
 136 00bf AD F0                   		movw	ax, r8
 137 00c1 DA F4                   		movw	bc, r12
 138 00c3 8D F2                   		mov	a, r10
 139 00c5 48 00 00                		mov	[bc], a
  60:../src/r_cg_intc.c ****     PMK4 = 1U;    /* disable INTP4 operation */
 140                             		.loc 1 60 0
 141 00c8 C9 F0 E4 FF             		movw	r8, #-28
 142 00cc AD F0                   		movw	ax, r8
 143 00ce BD F4                   		movw	r12, ax
 144 00d0 FA F4                   		movw	hl, r12
 145 00d2 8B                      		mov	a, [hl]
 146 00d3 9D F2                   		mov	r10, a
 147 00d5 6A F2 40                		or	r10, #64
 148 00d8 AD F0                   		movw	ax, r8
 149 00da DA F4                   		movw	bc, r12
 150 00dc 8D F2                   		mov	a, r10
 151 00de 48 00 00                		mov	[bc], a
  61:../src/r_cg_intc.c ****     PIF4 = 0U;    /* clear INTP4 interrupt flag */
 152                             		.loc 1 61 0
 153 00e1 C9 F0 E0 FF             		movw	r8, #-32
 154 00e5 AD F0                   		movw	ax, r8
 155 00e7 BD F4                   		movw	r12, ax
 156 00e9 FA F4                   		movw	hl, r12
 157 00eb 8B                      		mov	a, [hl]
 158 00ec 9D F2                   		mov	r10, a
 159 00ee 5A F2 BF                		and	r10, #-65
 160 00f1 AD F0                   		movw	ax, r8
 161 00f3 DA F4                   		movw	bc, r12
 162 00f5 8D F2                   		mov	a, r10
 163 00f7 48 00 00                		mov	[bc], a
  62:../src/r_cg_intc.c ****     PMK5 = 1U;    /* disable INTP5 operation */
 164                             		.loc 1 62 0
 165 00fa C9 F0 E4 FF             		movw	r8, #-28
 166 00fe AD F0                   		movw	ax, r8
 167 0100 BD F4                   		movw	r12, ax
 168 0102 FA F4                   		movw	hl, r12
 169 0104 8B                      		mov	a, [hl]
 170 0105 9D F2                   		mov	r10, a
 171 0107 6A F2 80                		or	r10, #-128
 172 010a AD F0                   		movw	ax, r8
 173 010c DA F4                   		movw	bc, r12
 174 010e 8D F2                   		mov	a, r10
 175 0110 48 00 00                		mov	[bc], a
  63:../src/r_cg_intc.c ****     PIF5 = 0U;    /* clear INTP5 interrupt flag */
 176                             		.loc 1 63 0
 177 0113 C9 F0 E0 FF             		movw	r8, #-32
 178 0117 AD F0                   		movw	ax, r8
 179 0119 BD F4                   		movw	r12, ax
 180 011b FA F4                   		movw	hl, r12
 181 011d 8B                      		mov	a, [hl]
 182 011e 9D F2                   		mov	r10, a
 183 0120 5A F2 7F                		and	r10, #127
 184 0123 AD F0                   		movw	ax, r8
 185 0125 DA F4                   		movw	bc, r12
 186 0127 8D F2                   		mov	a, r10
 187 0129 48 00 00                		mov	[bc], a
  64:../src/r_cg_intc.c ****     PMK6 = 1U;    /* disable INTP6 operation */
 188                             		.loc 1 64 0
 189 012c C9 F0 D4 FF             		movw	r8, #-44
 190 0130 AD F0                   		movw	ax, r8
 191 0132 BD F4                   		movw	r12, ax
 192 0134 FA F4                   		movw	hl, r12
 193 0136 8B                      		mov	a, [hl]
 194 0137 9D F2                   		mov	r10, a
 195 0139 6A F2 08                		or	r10, #8
 196 013c AD F0                   		movw	ax, r8
 197 013e DA F4                   		movw	bc, r12
 198 0140 8D F2                   		mov	a, r10
 199 0142 48 00 00                		mov	[bc], a
  65:../src/r_cg_intc.c ****     PIF6 = 0U;    /* clear INTP6 interrupt flag */
 200                             		.loc 1 65 0
 201 0145 C9 F0 D0 FF             		movw	r8, #-48
 202 0149 AD F0                   		movw	ax, r8
 203 014b BD F4                   		movw	r12, ax
 204 014d FA F4                   		movw	hl, r12
 205 014f 8B                      		mov	a, [hl]
 206 0150 9D F2                   		mov	r10, a
 207 0152 5A F2 F7                		and	r10, #-9
 208 0155 AD F0                   		movw	ax, r8
 209 0157 DA F4                   		movw	bc, r12
 210 0159 8D F2                   		mov	a, r10
 211 015b 48 00 00                		mov	[bc], a
  66:../src/r_cg_intc.c ****     PMK7 = 1U;    /* disable INTP7 operation */
 212                             		.loc 1 66 0
 213 015e C9 F0 D4 FF             		movw	r8, #-44
 214 0162 AD F0                   		movw	ax, r8
 215 0164 BD F4                   		movw	r12, ax
 216 0166 FA F4                   		movw	hl, r12
 217 0168 8B                      		mov	a, [hl]
 218 0169 9D F2                   		mov	r10, a
 219 016b 6A F2 10                		or	r10, #16
 220 016e AD F0                   		movw	ax, r8
 221 0170 DA F4                   		movw	bc, r12
 222 0172 8D F2                   		mov	a, r10
 223 0174 48 00 00                		mov	[bc], a
  67:../src/r_cg_intc.c ****     PIF7 = 0U;    /* clear INTP7 interrupt flag */
 224                             		.loc 1 67 0
 225 0177 C9 F0 D0 FF             		movw	r8, #-48
 226 017b AD F0                   		movw	ax, r8
 227 017d BD F4                   		movw	r12, ax
 228 017f FA F4                   		movw	hl, r12
 229 0181 8B                      		mov	a, [hl]
 230 0182 9D F2                   		mov	r10, a
 231 0184 5A F2 EF                		and	r10, #-17
 232 0187 AD F0                   		movw	ax, r8
 233 0189 DA F4                   		movw	bc, r12
 234 018b 8D F2                   		mov	a, r10
 235 018d 48 00 00                		mov	[bc], a
  68:../src/r_cg_intc.c ****     PMK8 = 1U;    /* disable INTP8 operation */
 236                             		.loc 1 68 0
 237 0190 C9 F0 D4 FF             		movw	r8, #-44
 238 0194 AD F0                   		movw	ax, r8
 239 0196 BD F4                   		movw	r12, ax
 240 0198 FA F4                   		movw	hl, r12
 241 019a 8B                      		mov	a, [hl]
 242 019b 9D F2                   		mov	r10, a
 243 019d 6A F2 20                		or	r10, #32
 244 01a0 AD F0                   		movw	ax, r8
 245 01a2 DA F4                   		movw	bc, r12
 246 01a4 8D F2                   		mov	a, r10
 247 01a6 48 00 00                		mov	[bc], a
  69:../src/r_cg_intc.c ****     PIF8 = 0U;    /* clear INTP8 interrupt flag */
 248                             		.loc 1 69 0
 249 01a9 C9 F0 D0 FF             		movw	r8, #-48
 250 01ad AD F0                   		movw	ax, r8
 251 01af BD F4                   		movw	r12, ax
 252 01b1 FA F4                   		movw	hl, r12
 253 01b3 8B                      		mov	a, [hl]
 254 01b4 9D F2                   		mov	r10, a
 255 01b6 5A F2 DF                		and	r10, #-33
 256 01b9 AD F0                   		movw	ax, r8
 257 01bb DA F4                   		movw	bc, r12
 258 01bd 8D F2                   		mov	a, r10
 259 01bf 48 00 00                		mov	[bc], a
  70:../src/r_cg_intc.c ****     PMK9 = 1U;    /* disable INTP9 operation */
 260                             		.loc 1 70 0
 261 01c2 C9 F0 D4 FF             		movw	r8, #-44
 262 01c6 AD F0                   		movw	ax, r8
 263 01c8 BD F4                   		movw	r12, ax
 264 01ca FA F4                   		movw	hl, r12
 265 01cc 8B                      		mov	a, [hl]
 266 01cd 9D F2                   		mov	r10, a
 267 01cf 6A F2 40                		or	r10, #64
 268 01d2 AD F0                   		movw	ax, r8
 269 01d4 DA F4                   		movw	bc, r12
 270 01d6 8D F2                   		mov	a, r10
 271 01d8 48 00 00                		mov	[bc], a
  71:../src/r_cg_intc.c ****     PIF9 = 0U;    /* clear INTP9 interrupt flag */
 272                             		.loc 1 71 0
 273 01db C9 F0 D0 FF             		movw	r8, #-48
 274 01df AD F0                   		movw	ax, r8
 275 01e1 BD F4                   		movw	r12, ax
 276 01e3 FA F4                   		movw	hl, r12
 277 01e5 8B                      		mov	a, [hl]
 278 01e6 9D F2                   		mov	r10, a
 279 01e8 5A F2 BF                		and	r10, #-65
 280 01eb AD F0                   		movw	ax, r8
 281 01ed DA F4                   		movw	bc, r12
 282 01ef 8D F2                   		mov	a, r10
 283 01f1 48 00 00                		mov	[bc], a
  72:../src/r_cg_intc.c ****     PMK10 = 1U;    /* disable INTP10 operation */
 284                             		.loc 1 72 0
 285 01f4 C9 F0 D4 FF             		movw	r8, #-44
 286 01f8 AD F0                   		movw	ax, r8
 287 01fa BD F4                   		movw	r12, ax
 288 01fc FA F4                   		movw	hl, r12
 289 01fe 8B                      		mov	a, [hl]
 290 01ff 9D F2                   		mov	r10, a
 291 0201 6A F2 80                		or	r10, #-128
 292 0204 AD F0                   		movw	ax, r8
 293 0206 DA F4                   		movw	bc, r12
 294 0208 8D F2                   		mov	a, r10
 295 020a 48 00 00                		mov	[bc], a
  73:../src/r_cg_intc.c ****     PIF10 = 0U;    /* clear INTP10 interrupt flag */
 296                             		.loc 1 73 0
 297 020d C9 F0 D0 FF             		movw	r8, #-48
 298 0211 AD F0                   		movw	ax, r8
 299 0213 BD F4                   		movw	r12, ax
 300 0215 FA F4                   		movw	hl, r12
 301 0217 8B                      		mov	a, [hl]
 302 0218 9D F2                   		mov	r10, a
 303 021a 5A F2 7F                		and	r10, #127
 304 021d AD F0                   		movw	ax, r8
 305 021f DA F4                   		movw	bc, r12
 306 0221 8D F2                   		mov	a, r10
 307 0223 48 00 00                		mov	[bc], a
  74:../src/r_cg_intc.c ****     PMK11 = 1U;    /* disable INTP11 operation */
 308                             		.loc 1 74 0
 309 0226 C9 F0 D5 FF             		movw	r8, #-43
 310 022a AD F0                   		movw	ax, r8
 311 022c BD F4                   		movw	r12, ax
 312 022e FA F4                   		movw	hl, r12
 313 0230 8B                      		mov	a, [hl]
 314 0231 9D F2                   		mov	r10, a
 315 0233 6A F2 01                		or	r10, #1
 316 0236 AD F0                   		movw	ax, r8
 317 0238 DA F4                   		movw	bc, r12
 318 023a 8D F2                   		mov	a, r10
 319 023c 48 00 00                		mov	[bc], a
  75:../src/r_cg_intc.c ****     PIF11 = 0U;    /* clear INTP11 interrupt flag */
 320                             		.loc 1 75 0
 321 023f C9 F0 D1 FF             		movw	r8, #-47
 322 0243 AD F0                   		movw	ax, r8
 323 0245 BD F4                   		movw	r12, ax
 324 0247 FA F4                   		movw	hl, r12
 325 0249 8B                      		mov	a, [hl]
 326 024a 9D F2                   		mov	r10, a
 327 024c 5A F2 FE                		and	r10, #-2
 328 024f AD F0                   		movw	ax, r8
 329 0251 DA F4                   		movw	bc, r12
 330 0253 8D F2                   		mov	a, r10
 331 0255 48 00 00                		mov	[bc], a
  76:../src/r_cg_intc.c ****     /* Set INTP7 low priority */
  77:../src/r_cg_intc.c ****     PPR17 = 1U;
 332                             		.loc 1 77 0
 333 0258 C9 F0 DC FF             		movw	r8, #-36
 334 025c AD F0                   		movw	ax, r8
 335 025e BD F4                   		movw	r12, ax
 336 0260 FA F4                   		movw	hl, r12
 337 0262 8B                      		mov	a, [hl]
 338 0263 9D F2                   		mov	r10, a
 339 0265 6A F2 10                		or	r10, #16
 340 0268 AD F0                   		movw	ax, r8
 341 026a DA F4                   		movw	bc, r12
 342 026c 8D F2                   		mov	a, r10
 343 026e 48 00 00                		mov	[bc], a
  78:../src/r_cg_intc.c ****     PPR07 = 1U;
 344                             		.loc 1 78 0
 345 0271 C9 F0 D8 FF             		movw	r8, #-40
 346 0275 AD F0                   		movw	ax, r8
 347 0277 BD F4                   		movw	r12, ax
 348 0279 FA F4                   		movw	hl, r12
 349 027b 8B                      		mov	a, [hl]
 350 027c 9D F2                   		mov	r10, a
 351 027e 6A F2 10                		or	r10, #16
 352 0281 AD F0                   		movw	ax, r8
 353 0283 DA F4                   		movw	bc, r12
 354 0285 8D F2                   		mov	a, r10
 355 0287 48 00 00                		mov	[bc], a
  79:../src/r_cg_intc.c ****     EGN0 = _80_INTP7_EDGE_FALLING_SEL;
 356                             		.loc 1 79 0
 357 028a C9 F0 39 FF             		movw	r8, #-199
 358 028e AD F0                   		movw	ax, r8
 359 0290 BD F2                   		movw	r10, ax
 360 0292 DA F2                   		movw	bc, r10
 361 0294 51 80                   		mov	a, #-128
 362 0296 48 00 00                		mov	[bc], a
  80:../src/r_cg_intc.c ****     EGP0 = _80_INTP7_EDGE_RISING_SEL;
 363                             		.loc 1 80 0
 364 0299 C9 F0 38 FF             		movw	r8, #-200
 365 029d AD F0                   		movw	ax, r8
 366 029f BD F4                   		movw	r12, ax
 367 02a1 DA F4                   		movw	bc, r12
 368 02a3 51 80                   		mov	a, #-128
 369 02a5 48 00 00                		mov	[bc], a
  81:../src/r_cg_intc.c ****     /* Set INTP7 pin */
  82:../src/r_cg_intc.c ****     PM14 |= 0x02U;
 370                             		.loc 1 82 0
 371 02a8 C9 F2 2E FF             		movw	r10, #-210
 372 02ac C9 F0 2E FF             		movw	r8, #-210
 373 02b0 AD F0                   		movw	ax, r8
 374 02b2 BD F4                   		movw	r12, ax
 375 02b4 FA F4                   		movw	hl, r12
 376 02b6 8B                      		mov	a, [hl]
 377 02b7 9D F0                   		mov	r8, a
 378 02b9 6A F0 02                		or	r8, #2
 379 02bc AD F2                   		movw	ax, r10
 380 02be BD F4                   		movw	r12, ax
 381 02c0 DA F4                   		movw	bc, r12
 382 02c2 8D F0                   		mov	a, r8
 383 02c4 48 00 00                		mov	[bc], a
  83:../src/r_cg_intc.c **** }
 384                             		.loc 1 83 0
 385 02c7 D7                      		ret
 386                             	.LFE0:
 388                             		.global	_R_INTC7_Start
 390                             	_R_INTC7_Start:
 391                             	.LFB1:
  84:../src/r_cg_intc.c **** 
  85:../src/r_cg_intc.c **** /**************************************************************************************************
  86:../src/r_cg_intc.c **** * Function Name: R_INTC7_Start
  87:../src/r_cg_intc.c **** * Description  : This function clears INTP7 interrupt flag and enables interrupt.
  88:../src/r_cg_intc.c **** * Arguments    : None
  89:../src/r_cg_intc.c **** * Return Value : None
  90:../src/r_cg_intc.c **** ***************************************************************************************************
  91:../src/r_cg_intc.c **** void R_INTC7_Start(void)
  92:../src/r_cg_intc.c **** {
 392                             		.loc 1 92 0
  93:../src/r_cg_intc.c ****     PIF7 = 0U;    /* clear INTP7 interrupt flag */
 393                             		.loc 1 93 0
 394 02c8 C9 F0 D0 FF             		movw	r8, #-48
 395 02cc AD F0                   		movw	ax, r8
 396 02ce BD F4                   		movw	r12, ax
 397 02d0 FA F4                   		movw	hl, r12
 398 02d2 8B                      		mov	a, [hl]
 399 02d3 9D F2                   		mov	r10, a
 400 02d5 5A F2 EF                		and	r10, #-17
 401 02d8 AD F0                   		movw	ax, r8
 402 02da DA F4                   		movw	bc, r12
 403 02dc 8D F2                   		mov	a, r10
 404 02de 48 00 00                		mov	[bc], a
  94:../src/r_cg_intc.c ****     PMK7 = 0U;    /* enable INTP7 interrupt */
 405                             		.loc 1 94 0
 406 02e1 C9 F0 D4 FF             		movw	r8, #-44
 407 02e5 AD F0                   		movw	ax, r8
 408 02e7 BD F4                   		movw	r12, ax
 409 02e9 FA F4                   		movw	hl, r12
 410 02eb 8B                      		mov	a, [hl]
 411 02ec 9D F2                   		mov	r10, a
 412 02ee 5A F2 EF                		and	r10, #-17
 413 02f1 AD F0                   		movw	ax, r8
 414 02f3 DA F4                   		movw	bc, r12
 415 02f5 8D F2                   		mov	a, r10
 416 02f7 48 00 00                		mov	[bc], a
  95:../src/r_cg_intc.c **** }
 417                             		.loc 1 95 0
 418 02fa D7                      		ret
 419                             	.LFE1:
 421                             		.global	_R_INTC7_Stop
 423                             	_R_INTC7_Stop:
 424                             	.LFB2:
  96:../src/r_cg_intc.c **** 
  97:../src/r_cg_intc.c **** /**************************************************************************************************
  98:../src/r_cg_intc.c **** * Function Name: R_INTC7_Stop
  99:../src/r_cg_intc.c **** * Description  : This function disables INTP7 interrupt and clears interrupt flag.
 100:../src/r_cg_intc.c **** * Arguments    : None
 101:../src/r_cg_intc.c **** * Return Value : None
 102:../src/r_cg_intc.c **** ***************************************************************************************************
 103:../src/r_cg_intc.c **** void R_INTC7_Stop(void)
 104:../src/r_cg_intc.c **** {
 425                             		.loc 1 104 0
 105:../src/r_cg_intc.c ****     PMK7 = 1U;    /* disable INTP7 interrupt */
 426                             		.loc 1 105 0
 427 02fb C9 F0 D4 FF             		movw	r8, #-44
 428 02ff AD F0                   		movw	ax, r8
 429 0301 BD F4                   		movw	r12, ax
 430 0303 FA F4                   		movw	hl, r12
 431 0305 8B                      		mov	a, [hl]
 432 0306 9D F2                   		mov	r10, a
 433 0308 6A F2 10                		or	r10, #16
 434 030b AD F0                   		movw	ax, r8
 435 030d DA F4                   		movw	bc, r12
 436 030f 8D F2                   		mov	a, r10
 437 0311 48 00 00                		mov	[bc], a
 106:../src/r_cg_intc.c ****     PIF7 = 0U;    /* clear INTP7 interrupt flag */
 438                             		.loc 1 106 0
 439 0314 C9 F0 D0 FF             		movw	r8, #-48
 440 0318 AD F0                   		movw	ax, r8
 441 031a BD F4                   		movw	r12, ax
 442 031c FA F4                   		movw	hl, r12
 443 031e 8B                      		mov	a, [hl]
 444 031f 9D F2                   		mov	r10, a
 445 0321 5A F2 EF                		and	r10, #-17
 446 0324 AD F0                   		movw	ax, r8
 447 0326 DA F4                   		movw	bc, r12
 448 0328 8D F2                   		mov	a, r10
 449 032a 48 00 00                		mov	[bc], a
 107:../src/r_cg_intc.c **** }
 450                             		.loc 1 107 0
 451 032d D7                      		ret
 452                             	.LFE2:
 496                             	.Letext0:
 497                             		.file 2 "../src/iodefine.h"
 498                             		.file 3 "../src/r_cg_macrodriver.h"
 499                             		.file 4 "../src/r_cg_userdefine.h"
 500                             		.file 5 "../src/global.c"
