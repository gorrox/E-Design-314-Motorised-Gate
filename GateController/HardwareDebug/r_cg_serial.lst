   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.comm	_gp_uart1_tx_address,2,2
  28                             		.comm	_g_uart1_tx_count,2,2
  29                             		.comm	_gp_uart1_rx_address,2,2
  30                             		.comm	_g_uart1_rx_count,2,2
  31                             		.comm	_g_uart1_rx_length,2,2
  32                             		.global	_R_SAU0_Create
  34                             	_R_SAU0_Create:
  35                             	.LFB0:
  36                             		.file 1 "../src/r_cg_serial.c"
   1:../src/r_cg_serial.c **** /**************************************************************************************************
   2:../src/r_cg_serial.c **** * DISCLAIMER
   3:../src/r_cg_serial.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_serial.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_serial.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_serial.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_serial.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_serial.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_serial.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_serial.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_serial.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_serial.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_serial.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_serial.c **** * following link:
  15:../src/r_cg_serial.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_serial.c **** *
  17:../src/r_cg_serial.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_serial.c **** ***************************************************************************************************
  19:../src/r_cg_serial.c **** 
  20:../src/r_cg_serial.c **** /**************************************************************************************************
  21:../src/r_cg_serial.c **** * File Name    : r_cg_serial.c
  22:../src/r_cg_serial.c **** * Version      : CodeGenerator for RL78/G14 V2.04.02.01 [15 May 2015]
  23:../src/r_cg_serial.c **** * Device(s)    : R5F104LE
  24:../src/r_cg_serial.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_serial.c **** * Description  : This file implements device driver for Serial module.
  26:../src/r_cg_serial.c **** * Creation Date: 5/4/2016
  27:../src/r_cg_serial.c **** ***************************************************************************************************
  28:../src/r_cg_serial.c **** 
  29:../src/r_cg_serial.c **** /**************************************************************************************************
  30:../src/r_cg_serial.c **** Includes
  31:../src/r_cg_serial.c **** ***************************************************************************************************
  32:../src/r_cg_serial.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_serial.c **** #include "r_cg_serial.h"
  34:../src/r_cg_serial.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_serial.c **** /* End user code. Do not edit comment generated here */
  36:../src/r_cg_serial.c **** #include "r_cg_userdefine.h"
  37:../src/r_cg_serial.c **** 
  38:../src/r_cg_serial.c **** /**************************************************************************************************
  39:../src/r_cg_serial.c **** Global variables and functions
  40:../src/r_cg_serial.c **** ***************************************************************************************************
  41:../src/r_cg_serial.c **** volatile uint8_t * gp_uart1_tx_address;        /* uart1 transmit buffer address */
  42:../src/r_cg_serial.c **** volatile uint16_t  g_uart1_tx_count;           /* uart1 transmit data number */
  43:../src/r_cg_serial.c **** volatile uint8_t * gp_uart1_rx_address;        /* uart1 receive buffer address */
  44:../src/r_cg_serial.c **** volatile uint16_t  g_uart1_rx_count;           /* uart1 receive data number */
  45:../src/r_cg_serial.c **** volatile uint16_t  g_uart1_rx_length;          /* uart1 receive data length */
  46:../src/r_cg_serial.c **** /* Start user code for global. Do not edit comment generated here */
  47:../src/r_cg_serial.c **** /* End user code. Do not edit comment generated here */
  48:../src/r_cg_serial.c **** 
  49:../src/r_cg_serial.c **** /**************************************************************************************************
  50:../src/r_cg_serial.c **** * Function Name: R_SAU0_Create
  51:../src/r_cg_serial.c **** * Description  : This function initializes the SAU0 module.
  52:../src/r_cg_serial.c **** * Arguments    : None
  53:../src/r_cg_serial.c **** * Return Value : None
  54:../src/r_cg_serial.c **** ***************************************************************************************************
  55:../src/r_cg_serial.c **** void R_SAU0_Create(void)
  56:../src/r_cg_serial.c **** {
  37                             		.loc 1 56 0
  57:../src/r_cg_serial.c ****     SAU0EN = 1U;    /* supply SAU0 clock */
  38                             		.loc 1 57 0
  39 0000 C9 F0 F0 00             		movw	r8, #240
  40 0004 AD F0                   		movw	ax, r8
  41 0006 BD F4                   		movw	r12, ax
  42 0008 FA F4                   		movw	hl, r12
  43 000a 8B                      		mov	a, [hl]
  44 000b 9D F2                   		mov	r10, a
  45 000d 6A F2 04                		or	r10, #4
  46 0010 AD F0                   		movw	ax, r8
  47 0012 DA F4                   		movw	bc, r12
  48 0014 8D F2                   		mov	a, r10
  49 0016 48 00 00                		mov	[bc], a
  58:../src/r_cg_serial.c ****     NOP();
  50                             		.loc 1 58 0
  51                             	 ; 58 "../src/r_cg_serial.c" 1
  52 0019 00                      		nop
  53                             	 ; 0 "" 2
  59:../src/r_cg_serial.c ****     NOP();
  54                             		.loc 1 59 0
  55                             	 ; 59 "../src/r_cg_serial.c" 1
  56 001a 00                      		nop
  57                             	 ; 0 "" 2
  60:../src/r_cg_serial.c ****     NOP();
  58                             		.loc 1 60 0
  59                             	 ; 60 "../src/r_cg_serial.c" 1
  60 001b 00                      		nop
  61                             	 ; 0 "" 2
  61:../src/r_cg_serial.c ****     NOP();
  62                             		.loc 1 61 0
  63                             	 ; 61 "../src/r_cg_serial.c" 1
  64 001c 00                      		nop
  65                             	 ; 0 "" 2
  62:../src/r_cg_serial.c ****     SPS0 = _0003_SAU_CK00_FCLK_3 | _0030_SAU_CK01_FCLK_3;
  66                             		.loc 1 62 0
  67 001d C9 F0 26 01             		movw	r8, #294
  68 0021 AD F0                   		movw	ax, r8
  69 0023 BD F2                   		movw	r10, ax
  70 0025 DA F2                   		movw	bc, r10
  71 0027 30 33 00                		movw	ax, #51
  72 002a 78 00 00                		movw	[bc], ax
  63:../src/r_cg_serial.c ****     R_UART1_Create();
  73                             		.loc 1 63 0
  74 002d FC 00 00 00             		call	!!%code(_R_UART1_Create)
  64:../src/r_cg_serial.c **** }
  75                             		.loc 1 64 0
  76 0031 D7                      		ret
  77                             	.LFE0:
  79                             		.global	_R_UART1_Create
  81                             	_R_UART1_Create:
  82                             	.LFB1:
  65:../src/r_cg_serial.c **** 
  66:../src/r_cg_serial.c **** /**************************************************************************************************
  67:../src/r_cg_serial.c **** * Function Name: R_UART1_Create
  68:../src/r_cg_serial.c **** * Description  : This function initializes the UART1 module.
  69:../src/r_cg_serial.c **** * Arguments    : None
  70:../src/r_cg_serial.c **** * Return Value : None
  71:../src/r_cg_serial.c **** ***************************************************************************************************
  72:../src/r_cg_serial.c **** void R_UART1_Create(void)
  73:../src/r_cg_serial.c **** {
  83                             		.loc 1 73 0
  84                             		; start of function
  85                             		; push 2: r16
  86 0032 61 EF                   		sel	rb2
  87 0034 C1                      		push	ax ; r16
  88                             	.LCFI0:
  89 0035 61 CF                   		sel	rb0
  74:../src/r_cg_serial.c ****     ST0 |= _0008_SAU_CH3_STOP_TRG_ON | _0004_SAU_CH2_STOP_TRG_ON;    /* disable UART1 receive and t
  90                             		.loc 1 74 0
  91 0037 C9 E8 24 01             		movw	r16, #292
  92 003b C9 F6 24 01             		movw	r14, #292
  93 003f AD F6                   		movw	ax, r14
  94 0041 BD F0                   		movw	r8, ax
  95 0043 FA F0                   		movw	hl, r8
  96 0045 AB                      		movw	ax, [hl]
  97 0046 BD F6                   		movw	r14, ax
  98 0048 8D F6                   		mov	a, r14
  99 004a 6C 0C                   		or	a, #12
 100 004c 9D F4                   		mov	r12, a
 101 004e 8D F7                   		mov	a, r15
 102 0050 6C 00                   		or	a, #0
 103 0052 9D F5                   		mov	r13, a
 104 0054 DA E8                   		movw	bc, r16
 105 0056 AD F4                   		movw	ax, r12
 106 0058 78 00 00                		movw	[bc], ax
  75:../src/r_cg_serial.c ****     STMK1 = 1U;    /* disable INTST1 interrupt */
 107                             		.loc 1 75 0
 108 005b C9 F4 E6 FF             		movw	r12, #-26
 109 005f AD F4                   		movw	ax, r12
 110 0061 BD F2                   		movw	r10, ax
 111 0063 FA F2                   		movw	hl, r10
 112 0065 8B                      		mov	a, [hl]
 113 0066 9D F6                   		mov	r14, a
 114 0068 6A F6 01                		or	r14, #1
 115 006b AD F4                   		movw	ax, r12
 116 006d BD F0                   		movw	r8, ax
 117 006f DA F0                   		movw	bc, r8
 118 0071 8D F6                   		mov	a, r14
 119 0073 48 00 00                		mov	[bc], a
  76:../src/r_cg_serial.c ****     STIF1 = 0U;    /* clear INTST1 interrupt flag */
 120                             		.loc 1 76 0
 121 0076 C9 F4 E2 FF             		movw	r12, #-30
 122 007a AD F4                   		movw	ax, r12
 123 007c BD F2                   		movw	r10, ax
 124 007e FA F2                   		movw	hl, r10
 125 0080 8B                      		mov	a, [hl]
 126 0081 9D F6                   		mov	r14, a
 127 0083 5A F6 FE                		and	r14, #-2
 128 0086 AD F4                   		movw	ax, r12
 129 0088 BD F0                   		movw	r8, ax
 130 008a DA F0                   		movw	bc, r8
 131 008c 8D F6                   		mov	a, r14
 132 008e 48 00 00                		mov	[bc], a
  77:../src/r_cg_serial.c ****     SRMK1 = 1U;    /* disable INTSR1 interrupt */
 133                             		.loc 1 77 0
 134 0091 C9 F4 E6 FF             		movw	r12, #-26
 135 0095 AD F4                   		movw	ax, r12
 136 0097 BD F2                   		movw	r10, ax
 137 0099 FA F2                   		movw	hl, r10
 138 009b 8B                      		mov	a, [hl]
 139 009c 9D F6                   		mov	r14, a
 140 009e 6A F6 02                		or	r14, #2
 141 00a1 AD F4                   		movw	ax, r12
 142 00a3 BD F0                   		movw	r8, ax
 143 00a5 DA F0                   		movw	bc, r8
 144 00a7 8D F6                   		mov	a, r14
 145 00a9 48 00 00                		mov	[bc], a
  78:../src/r_cg_serial.c ****     SRIF1 = 0U;    /* clear INTSR1 interrupt flag */
 146                             		.loc 1 78 0
 147 00ac C9 F4 E2 FF             		movw	r12, #-30
 148 00b0 AD F4                   		movw	ax, r12
 149 00b2 BD F2                   		movw	r10, ax
 150 00b4 FA F2                   		movw	hl, r10
 151 00b6 8B                      		mov	a, [hl]
 152 00b7 9D F6                   		mov	r14, a
 153 00b9 5A F6 FD                		and	r14, #-3
 154 00bc AD F4                   		movw	ax, r12
 155 00be BD F0                   		movw	r8, ax
 156 00c0 DA F0                   		movw	bc, r8
 157 00c2 8D F6                   		mov	a, r14
 158 00c4 48 00 00                		mov	[bc], a
  79:../src/r_cg_serial.c ****     SREMK1 = 1U;   /* disable INTSRE1 interrupt */
 159                             		.loc 1 79 0
 160 00c7 C9 F4 E6 FF             		movw	r12, #-26
 161 00cb AD F4                   		movw	ax, r12
 162 00cd BD F2                   		movw	r10, ax
 163 00cf FA F2                   		movw	hl, r10
 164 00d1 8B                      		mov	a, [hl]
 165 00d2 9D F6                   		mov	r14, a
 166 00d4 6A F6 04                		or	r14, #4
 167 00d7 AD F4                   		movw	ax, r12
 168 00d9 BD F0                   		movw	r8, ax
 169 00db DA F0                   		movw	bc, r8
 170 00dd 8D F6                   		mov	a, r14
 171 00df 48 00 00                		mov	[bc], a
  80:../src/r_cg_serial.c ****     SREIF1 = 0U;   /* clear INTSRE1 interrupt flag */
 172                             		.loc 1 80 0
 173 00e2 C9 F4 E2 FF             		movw	r12, #-30
 174 00e6 AD F4                   		movw	ax, r12
 175 00e8 BD F2                   		movw	r10, ax
 176 00ea FA F2                   		movw	hl, r10
 177 00ec 8B                      		mov	a, [hl]
 178 00ed 9D F6                   		mov	r14, a
 179 00ef 5A F6 FB                		and	r14, #-5
 180 00f2 AD F4                   		movw	ax, r12
 181 00f4 BD F0                   		movw	r8, ax
 182 00f6 DA F0                   		movw	bc, r8
 183 00f8 8D F6                   		mov	a, r14
 184 00fa 48 00 00                		mov	[bc], a
  81:../src/r_cg_serial.c ****     /* Set INTST1 low priority */
  82:../src/r_cg_serial.c ****     STPR11 = 1U;
 185                             		.loc 1 82 0
 186 00fd C9 F4 EE FF             		movw	r12, #-18
 187 0101 AD F4                   		movw	ax, r12
 188 0103 BD F2                   		movw	r10, ax
 189 0105 FA F2                   		movw	hl, r10
 190 0107 8B                      		mov	a, [hl]
 191 0108 9D F6                   		mov	r14, a
 192 010a 6A F6 01                		or	r14, #1
 193 010d AD F4                   		movw	ax, r12
 194 010f BD F0                   		movw	r8, ax
 195 0111 DA F0                   		movw	bc, r8
 196 0113 8D F6                   		mov	a, r14
 197 0115 48 00 00                		mov	[bc], a
  83:../src/r_cg_serial.c ****     STPR01 = 1U;
 198                             		.loc 1 83 0
 199 0118 C9 F4 EA FF             		movw	r12, #-22
 200 011c AD F4                   		movw	ax, r12
 201 011e BD F2                   		movw	r10, ax
 202 0120 FA F2                   		movw	hl, r10
 203 0122 8B                      		mov	a, [hl]
 204 0123 9D F6                   		mov	r14, a
 205 0125 6A F6 01                		or	r14, #1
 206 0128 AD F4                   		movw	ax, r12
 207 012a BD F0                   		movw	r8, ax
 208 012c DA F0                   		movw	bc, r8
 209 012e 8D F6                   		mov	a, r14
 210 0130 48 00 00                		mov	[bc], a
  84:../src/r_cg_serial.c ****     /* Set INTSR1 low priority */
  85:../src/r_cg_serial.c ****     SRPR11 = 1U;
 211                             		.loc 1 85 0
 212 0133 C9 F4 EE FF             		movw	r12, #-18
 213 0137 AD F4                   		movw	ax, r12
 214 0139 BD F2                   		movw	r10, ax
 215 013b FA F2                   		movw	hl, r10
 216 013d 8B                      		mov	a, [hl]
 217 013e 9D F6                   		mov	r14, a
 218 0140 6A F6 02                		or	r14, #2
 219 0143 AD F4                   		movw	ax, r12
 220 0145 BD F0                   		movw	r8, ax
 221 0147 DA F0                   		movw	bc, r8
 222 0149 8D F6                   		mov	a, r14
 223 014b 48 00 00                		mov	[bc], a
  86:../src/r_cg_serial.c ****     SRPR01 = 1U;
 224                             		.loc 1 86 0
 225 014e C9 F4 EA FF             		movw	r12, #-22
 226 0152 AD F4                   		movw	ax, r12
 227 0154 BD F2                   		movw	r10, ax
 228 0156 FA F2                   		movw	hl, r10
 229 0158 8B                      		mov	a, [hl]
 230 0159 9D F6                   		mov	r14, a
 231 015b 6A F6 02                		or	r14, #2
 232 015e AD F4                   		movw	ax, r12
 233 0160 BD F0                   		movw	r8, ax
 234 0162 DA F0                   		movw	bc, r8
 235 0164 8D F6                   		mov	a, r14
 236 0166 48 00 00                		mov	[bc], a
  87:../src/r_cg_serial.c ****     SMR02 = _0020_SAU_SMRMN_INITIALVALUE | _0000_SAU_CLOCK_SELECT_CK00 | _0000_SAU_TRIGGER_SOFTWARE
 237                             		.loc 1 87 0
 238 0169 C9 F4 14 01             		movw	r12, #276
 239 016d AD F4                   		movw	ax, r12
 240 016f BD F2                   		movw	r10, ax
 241 0171 DA F2                   		movw	bc, r10
 242 0173 30 22 00                		movw	ax, #34
 243 0176 78 00 00                		movw	[bc], ax
  88:../src/r_cg_serial.c ****             _0002_SAU_MODE_UART | _0000_SAU_TRANSFER_END;
  89:../src/r_cg_serial.c ****     SCR02 = _8000_SAU_TRANSMISSION | _0000_SAU_INTSRE_MASK | _0000_SAU_PARITY_NONE | _0080_SAU_LSB 
 244                             		.loc 1 89 0
 245 0179 C9 F4 1C 01             		movw	r12, #284
 246 017d AD F4                   		movw	ax, r12
 247 017f BD F0                   		movw	r8, ax
 248 0181 DA F0                   		movw	bc, r8
 249 0183 30 97 80                		movw	ax, #-32617
 250 0186 78 00 00                		movw	[bc], ax
  90:../src/r_cg_serial.c ****             _0007_SAU_LENGTH_8;
  91:../src/r_cg_serial.c ****     SDR02 = _CE00_UART1_TRANSMIT_DIVISOR;
 251                             		.loc 1 91 0
 252 0189 C9 F4 44 FF             		movw	r12, #-188
 253 018d AD F4                   		movw	ax, r12
 254 018f BD F2                   		movw	r10, ax
 255 0191 DA F2                   		movw	bc, r10
 256 0193 30 00 CE                		movw	ax, #-12800
 257 0196 78 00 00                		movw	[bc], ax
  92:../src/r_cg_serial.c ****     NFEN0 |= _04_SAU_RXD1_FILTER_ON;
 258                             		.loc 1 92 0
 259 0199 C9 F6 70 00             		movw	r14, #112
 260 019d C9 F4 70 00             		movw	r12, #112
 261 01a1 AD F4                   		movw	ax, r12
 262 01a3 BD F0                   		movw	r8, ax
 263 01a5 FA F0                   		movw	hl, r8
 264 01a7 8B                      		mov	a, [hl]
 265 01a8 9D F4                   		mov	r12, a
 266 01aa 6A F4 04                		or	r12, #4
 267 01ad AD F6                   		movw	ax, r14
 268 01af BD F2                   		movw	r10, ax
 269 01b1 DA F2                   		movw	bc, r10
 270 01b3 8D F4                   		mov	a, r12
 271 01b5 48 00 00                		mov	[bc], a
  93:../src/r_cg_serial.c ****     SIR03 = _0004_SAU_SIRMN_FECTMN | _0002_SAU_SIRMN_PECTMN | _0001_SAU_SIRMN_OVCTMN;    /* clear e
 272                             		.loc 1 93 0
 273 01b8 C9 F4 0E 01             		movw	r12, #270
 274 01bc AD F4                   		movw	ax, r12
 275 01be BD F0                   		movw	r8, ax
 276 01c0 DA F0                   		movw	bc, r8
 277 01c2 30 07 00                		movw	ax, #7
 278 01c5 78 00 00                		movw	[bc], ax
  94:../src/r_cg_serial.c ****     SMR03 = _0020_SAU_SMRMN_INITIALVALUE | _0000_SAU_CLOCK_SELECT_CK00 | _0100_SAU_TRIGGER_RXD | _0
 279                             		.loc 1 94 0
 280 01c8 C9 F4 16 01             		movw	r12, #278
 281 01cc AD F4                   		movw	ax, r12
 282 01ce BD F2                   		movw	r10, ax
 283 01d0 DA F2                   		movw	bc, r10
 284 01d2 30 22 01                		movw	ax, #290
 285 01d5 78 00 00                		movw	[bc], ax
  95:../src/r_cg_serial.c ****             _0002_SAU_MODE_UART | _0000_SAU_TRANSFER_END;
  96:../src/r_cg_serial.c ****     SCR03 = _4000_SAU_RECEPTION | _0000_SAU_INTSRE_MASK | _0000_SAU_PARITY_NONE | _0080_SAU_LSB | _
 286                             		.loc 1 96 0
 287 01d8 C9 F4 1E 01             		movw	r12, #286
 288 01dc AD F4                   		movw	ax, r12
 289 01de BD F0                   		movw	r8, ax
 290 01e0 DA F0                   		movw	bc, r8
 291 01e2 30 97 40                		movw	ax, #16535
 292 01e5 78 00 00                		movw	[bc], ax
  97:../src/r_cg_serial.c ****             _0007_SAU_LENGTH_8;
  98:../src/r_cg_serial.c ****     SDR03 = _CE00_UART1_RECEIVE_DIVISOR;
 293                             		.loc 1 98 0
 294 01e8 C9 F4 46 FF             		movw	r12, #-186
 295 01ec AD F4                   		movw	ax, r12
 296 01ee BD F2                   		movw	r10, ax
 297 01f0 DA F2                   		movw	bc, r10
 298 01f2 30 00 CE                		movw	ax, #-12800
 299 01f5 78 00 00                		movw	[bc], ax
  99:../src/r_cg_serial.c ****     SO0 |= _0004_SAU_CH2_DATA_OUTPUT_1;
 300                             		.loc 1 99 0
 301 01f8 C9 F6 28 01             		movw	r14, #296
 302 01fc C9 F4 28 01             		movw	r12, #296
 303 0200 AD F4                   		movw	ax, r12
 304 0202 BD F0                   		movw	r8, ax
 305 0204 FA F0                   		movw	hl, r8
 306 0206 AB                      		movw	ax, [hl]
 307 0207 BD F4                   		movw	r12, ax
 308 0209 8D F4                   		mov	a, r12
 309 020b 6C 04                   		or	a, #4
 310 020d 9D F2                   		mov	r10, a
 311 020f 8D F5                   		mov	a, r13
 312 0211 6C 00                   		or	a, #0
 313 0213 9D F3                   		mov	r11, a
 314 0215 AD F6                   		movw	ax, r14
 315 0217 BD F4                   		movw	r12, ax
 316 0219 DA F4                   		movw	bc, r12
 317 021b AD F2                   		movw	ax, r10
 318 021d 78 00 00                		movw	[bc], ax
 100:../src/r_cg_serial.c ****     SOL0 |= _0000_SAU_CHANNEL2_NORMAL;    /* output level normal */
 319                             		.loc 1 100 0
 320 0220 C9 F4 34 01             		movw	r12, #308
 321 0224 C9 F2 34 01             		movw	r10, #308
 322 0228 AD F2                   		movw	ax, r10
 323 022a BD F0                   		movw	r8, ax
 324 022c FA F0                   		movw	hl, r8
 325 022e AB                      		movw	ax, [hl]
 326 022f BD F2                   		movw	r10, ax
 327 0231 AD F4                   		movw	ax, r12
 328 0233 BD F0                   		movw	r8, ax
 329 0235 DA F0                   		movw	bc, r8
 330 0237 AD F2                   		movw	ax, r10
 331 0239 78 00 00                		movw	[bc], ax
 101:../src/r_cg_serial.c ****     SOE0 |= _0004_SAU_CH2_OUTPUT_ENABLE;    /* enable UART1 output */
 332                             		.loc 1 101 0
 333 023c C9 F4 2A 01             		movw	r12, #298
 334 0240 C9 F2 2A 01             		movw	r10, #298
 335 0244 AD F2                   		movw	ax, r10
 336 0246 BD F0                   		movw	r8, ax
 337 0248 FA F0                   		movw	hl, r8
 338 024a AB                      		movw	ax, [hl]
 339 024b BD F2                   		movw	r10, ax
 340 024d 8D F2                   		mov	a, r10
 341 024f 6C 04                   		or	a, #4
 342 0251 9D F0                   		mov	r8, a
 343 0253 8D F3                   		mov	a, r11
 344 0255 6C 00                   		or	a, #0
 345 0257 9D F1                   		mov	r9, a
 346 0259 AD F4                   		movw	ax, r12
 347 025b BD F2                   		movw	r10, ax
 348 025d DA F2                   		movw	bc, r10
 349 025f AD F0                   		movw	ax, r8
 350 0261 78 00 00                		movw	[bc], ax
 102:../src/r_cg_serial.c ****     /* Set RxD1 pin */
 103:../src/r_cg_serial.c ****     PMC0 &= 0xF7U;
 351                             		.loc 1 103 0
 352 0264 C9 F2 60 00             		movw	r10, #96
 353 0268 C9 F0 60 00             		movw	r8, #96
 354 026c AD F0                   		movw	ax, r8
 355 026e BD F4                   		movw	r12, ax
 356 0270 FA F4                   		movw	hl, r12
 357 0272 8B                      		mov	a, [hl]
 358 0273 9D F0                   		mov	r8, a
 359 0275 5A F0 F7                		and	r8, #-9
 360 0278 AD F2                   		movw	ax, r10
 361 027a BD F4                   		movw	r12, ax
 362 027c DA F4                   		movw	bc, r12
 363 027e 8D F0                   		mov	a, r8
 364 0280 48 00 00                		mov	[bc], a
 104:../src/r_cg_serial.c ****     PM0 |= 0x08U;
 365                             		.loc 1 104 0
 366 0283 C9 F2 20 FF             		movw	r10, #-224
 367 0287 C9 F0 20 FF             		movw	r8, #-224
 368 028b AD F0                   		movw	ax, r8
 369 028d BD F4                   		movw	r12, ax
 370 028f FA F4                   		movw	hl, r12
 371 0291 8B                      		mov	a, [hl]
 372 0292 9D F0                   		mov	r8, a
 373 0294 6A F0 08                		or	r8, #8
 374 0297 AD F2                   		movw	ax, r10
 375 0299 BD F4                   		movw	r12, ax
 376 029b DA F4                   		movw	bc, r12
 377 029d 8D F0                   		mov	a, r8
 378 029f 48 00 00                		mov	[bc], a
 105:../src/r_cg_serial.c ****     /* Set TxD1 pin */
 106:../src/r_cg_serial.c ****     PMC0 &= 0xFBU;
 379                             		.loc 1 106 0
 380 02a2 C9 F2 60 00             		movw	r10, #96
 381 02a6 C9 F0 60 00             		movw	r8, #96
 382 02aa AD F0                   		movw	ax, r8
 383 02ac BD F4                   		movw	r12, ax
 384 02ae FA F4                   		movw	hl, r12
 385 02b0 8B                      		mov	a, [hl]
 386 02b1 9D F0                   		mov	r8, a
 387 02b3 5A F0 FB                		and	r8, #-5
 388 02b6 AD F2                   		movw	ax, r10
 389 02b8 BD F4                   		movw	r12, ax
 390 02ba DA F4                   		movw	bc, r12
 391 02bc 8D F0                   		mov	a, r8
 392 02be 48 00 00                		mov	[bc], a
 107:../src/r_cg_serial.c ****     P0 |= 0x04U;
 393                             		.loc 1 107 0
 394 02c1 C9 F2 00 FF             		movw	r10, #-256
 395 02c5 C9 F0 00 FF             		movw	r8, #-256
 396 02c9 AD F0                   		movw	ax, r8
 397 02cb BD F4                   		movw	r12, ax
 398 02cd FA F4                   		movw	hl, r12
 399 02cf 8B                      		mov	a, [hl]
 400 02d0 9D F0                   		mov	r8, a
 401 02d2 6A F0 04                		or	r8, #4
 402 02d5 AD F2                   		movw	ax, r10
 403 02d7 BD F4                   		movw	r12, ax
 404 02d9 DA F4                   		movw	bc, r12
 405 02db 8D F0                   		mov	a, r8
 406 02dd 48 00 00                		mov	[bc], a
 108:../src/r_cg_serial.c ****     PM0 &= 0xFBU;
 407                             		.loc 1 108 0
 408 02e0 C9 F2 20 FF             		movw	r10, #-224
 409 02e4 C9 F0 20 FF             		movw	r8, #-224
 410 02e8 AD F0                   		movw	ax, r8
 411 02ea BD F4                   		movw	r12, ax
 412 02ec FA F4                   		movw	hl, r12
 413 02ee 8B                      		mov	a, [hl]
 414 02ef 9D F0                   		mov	r8, a
 415 02f1 5A F0 FB                		and	r8, #-5
 416 02f4 AD F2                   		movw	ax, r10
 417 02f6 BD F4                   		movw	r12, ax
 418 02f8 DA F4                   		movw	bc, r12
 419 02fa 8D F0                   		mov	a, r8
 420 02fc 48 00 00                		mov	[bc], a
 109:../src/r_cg_serial.c **** }
 421                             		.loc 1 109 0
 422 02ff 61 EF                   		sel	rb2
 423 0301 C0                      		pop	ax ; r16
 424 0302 61 CF                   		sel	rb0
 425 0304 D7                      		ret
 426                             	.LFE1:
 428                             		.global	_R_UART1_Start
 430                             	_R_UART1_Start:
 431                             	.LFB2:
 110:../src/r_cg_serial.c **** 
 111:../src/r_cg_serial.c **** /**************************************************************************************************
 112:../src/r_cg_serial.c **** * Function Name: R_UART1_Start
 113:../src/r_cg_serial.c **** * Description  : This function starts the UART1 module operation.
 114:../src/r_cg_serial.c **** * Arguments    : None
 115:../src/r_cg_serial.c **** * Return Value : None
 116:../src/r_cg_serial.c **** ***************************************************************************************************
 117:../src/r_cg_serial.c **** void R_UART1_Start(void)
 118:../src/r_cg_serial.c **** {
 432                             		.loc 1 118 0
 433                             		; start of function
 434                             		; push 2: r16
 435 0305 61 EF                   		sel	rb2
 436 0307 C1                      		push	ax ; r16
 437                             	.LCFI1:
 438 0308 61 CF                   		sel	rb0
 119:../src/r_cg_serial.c ****     SO0 |= _0004_SAU_CH2_DATA_OUTPUT_1;    /* output level normal */
 439                             		.loc 1 119 0
 440 030a C9 E8 28 01             		movw	r16, #296
 441 030e C9 F6 28 01             		movw	r14, #296
 442 0312 AD F6                   		movw	ax, r14
 443 0314 BD F0                   		movw	r8, ax
 444 0316 FA F0                   		movw	hl, r8
 445 0318 AB                      		movw	ax, [hl]
 446 0319 BD F6                   		movw	r14, ax
 447 031b 8D F6                   		mov	a, r14
 448 031d 6C 04                   		or	a, #4
 449 031f 9D F4                   		mov	r12, a
 450 0321 8D F7                   		mov	a, r15
 451 0323 6C 00                   		or	a, #0
 452 0325 9D F5                   		mov	r13, a
 453 0327 DA E8                   		movw	bc, r16
 454 0329 AD F4                   		movw	ax, r12
 455 032b 78 00 00                		movw	[bc], ax
 120:../src/r_cg_serial.c ****     SOE0 |= _0004_SAU_CH2_OUTPUT_ENABLE;    /* enable UART1 output */
 456                             		.loc 1 120 0
 457 032e C9 F6 2A 01             		movw	r14, #298
 458 0332 C9 F4 2A 01             		movw	r12, #298
 459 0336 AD F4                   		movw	ax, r12
 460 0338 BD F2                   		movw	r10, ax
 461 033a FA F2                   		movw	hl, r10
 462 033c AB                      		movw	ax, [hl]
 463 033d BD F4                   		movw	r12, ax
 464 033f 8D F4                   		mov	a, r12
 465 0341 6C 04                   		or	a, #4
 466 0343 9D F2                   		mov	r10, a
 467 0345 8D F5                   		mov	a, r13
 468 0347 6C 00                   		or	a, #0
 469 0349 9D F3                   		mov	r11, a
 470 034b AD F6                   		movw	ax, r14
 471 034d BD F4                   		movw	r12, ax
 472 034f DA F4                   		movw	bc, r12
 473 0351 AD F2                   		movw	ax, r10
 474 0353 78 00 00                		movw	[bc], ax
 121:../src/r_cg_serial.c ****     SS0 |= _0008_SAU_CH3_START_TRG_ON | _0004_SAU_CH2_START_TRG_ON;    /* enable UART1 receive and 
 475                             		.loc 1 121 0
 476 0356 C9 F4 22 01             		movw	r12, #290
 477 035a C9 F2 22 01             		movw	r10, #290
 478 035e AD F2                   		movw	ax, r10
 479 0360 BD F0                   		movw	r8, ax
 480 0362 FA F0                   		movw	hl, r8
 481 0364 AB                      		movw	ax, [hl]
 482 0365 BD F2                   		movw	r10, ax
 483 0367 8D F2                   		mov	a, r10
 484 0369 6C 0C                   		or	a, #12
 485 036b 9D F0                   		mov	r8, a
 486 036d 8D F3                   		mov	a, r11
 487 036f 6C 00                   		or	a, #0
 488 0371 9D F1                   		mov	r9, a
 489 0373 AD F4                   		movw	ax, r12
 490 0375 BD F2                   		movw	r10, ax
 491 0377 DA F2                   		movw	bc, r10
 492 0379 AD F0                   		movw	ax, r8
 493 037b 78 00 00                		movw	[bc], ax
 122:../src/r_cg_serial.c ****     STIF1 = 0U;    /* clear INTST1 interrupt flag */
 494                             		.loc 1 122 0
 495 037e C9 F0 E2 FF             		movw	r8, #-30
 496 0382 AD F0                   		movw	ax, r8
 497 0384 BD F4                   		movw	r12, ax
 498 0386 FA F4                   		movw	hl, r12
 499 0388 8B                      		mov	a, [hl]
 500 0389 9D F2                   		mov	r10, a
 501 038b 5A F2 FE                		and	r10, #-2
 502 038e AD F0                   		movw	ax, r8
 503 0390 DA F4                   		movw	bc, r12
 504 0392 8D F2                   		mov	a, r10
 505 0394 48 00 00                		mov	[bc], a
 123:../src/r_cg_serial.c ****     SRIF1 = 0U;    /* clear INTSR1 interrupt flag */
 506                             		.loc 1 123 0
 507 0397 C9 F0 E2 FF             		movw	r8, #-30
 508 039b AD F0                   		movw	ax, r8
 509 039d BD F4                   		movw	r12, ax
 510 039f FA F4                   		movw	hl, r12
 511 03a1 8B                      		mov	a, [hl]
 512 03a2 9D F2                   		mov	r10, a
 513 03a4 5A F2 FD                		and	r10, #-3
 514 03a7 AD F0                   		movw	ax, r8
 515 03a9 DA F4                   		movw	bc, r12
 516 03ab 8D F2                   		mov	a, r10
 517 03ad 48 00 00                		mov	[bc], a
 124:../src/r_cg_serial.c ****     STMK1 = 0U;    /* enable INTST1 interrupt */
 518                             		.loc 1 124 0
 519 03b0 C9 F0 E6 FF             		movw	r8, #-26
 520 03b4 AD F0                   		movw	ax, r8
 521 03b6 BD F4                   		movw	r12, ax
 522 03b8 FA F4                   		movw	hl, r12
 523 03ba 8B                      		mov	a, [hl]
 524 03bb 9D F2                   		mov	r10, a
 525 03bd 5A F2 FE                		and	r10, #-2
 526 03c0 AD F0                   		movw	ax, r8
 527 03c2 DA F4                   		movw	bc, r12
 528 03c4 8D F2                   		mov	a, r10
 529 03c6 48 00 00                		mov	[bc], a
 125:../src/r_cg_serial.c ****     SRMK1 = 0U;    /* enable INTSR1 interrupt */
 530                             		.loc 1 125 0
 531 03c9 C9 F0 E6 FF             		movw	r8, #-26
 532 03cd AD F0                   		movw	ax, r8
 533 03cf BD F4                   		movw	r12, ax
 534 03d1 FA F4                   		movw	hl, r12
 535 03d3 8B                      		mov	a, [hl]
 536 03d4 9D F2                   		mov	r10, a
 537 03d6 5A F2 FD                		and	r10, #-3
 538 03d9 AD F0                   		movw	ax, r8
 539 03db DA F4                   		movw	bc, r12
 540 03dd 8D F2                   		mov	a, r10
 541 03df 48 00 00                		mov	[bc], a
 126:../src/r_cg_serial.c **** }
 542                             		.loc 1 126 0
 543 03e2 61 EF                   		sel	rb2
 544 03e4 C0                      		pop	ax ; r16
 545 03e5 61 CF                   		sel	rb0
 546 03e7 D7                      		ret
 547                             	.LFE2:
 549                             		.global	_R_UART1_Stop
 551                             	_R_UART1_Stop:
 552                             	.LFB3:
 127:../src/r_cg_serial.c **** 
 128:../src/r_cg_serial.c **** /**************************************************************************************************
 129:../src/r_cg_serial.c **** * Function Name: R_UART1_Stop
 130:../src/r_cg_serial.c **** * Description  : This function stops the UART1 module operation.
 131:../src/r_cg_serial.c **** * Arguments    : None
 132:../src/r_cg_serial.c **** * Return Value : None
 133:../src/r_cg_serial.c **** ***************************************************************************************************
 134:../src/r_cg_serial.c **** void R_UART1_Stop(void)
 135:../src/r_cg_serial.c **** {
 553                             		.loc 1 135 0
 136:../src/r_cg_serial.c ****     STMK1 = 1U;    /* disable INTST1 interrupt */
 554                             		.loc 1 136 0
 555 03e8 C9 F4 E6 FF             		movw	r12, #-26
 556 03ec AD F4                   		movw	ax, r12
 557 03ee BD F0                   		movw	r8, ax
 558 03f0 FA F0                   		movw	hl, r8
 559 03f2 8B                      		mov	a, [hl]
 560 03f3 9D F6                   		mov	r14, a
 561 03f5 6A F6 01                		or	r14, #1
 562 03f8 AD F4                   		movw	ax, r12
 563 03fa BD F2                   		movw	r10, ax
 564 03fc DA F2                   		movw	bc, r10
 565 03fe 8D F6                   		mov	a, r14
 566 0400 48 00 00                		mov	[bc], a
 137:../src/r_cg_serial.c ****     SRMK1 = 1U;    /* disable INTSR1 interrupt */
 567                             		.loc 1 137 0
 568 0403 C9 F4 E6 FF             		movw	r12, #-26
 569 0407 AD F4                   		movw	ax, r12
 570 0409 BD F0                   		movw	r8, ax
 571 040b FA F0                   		movw	hl, r8
 572 040d 8B                      		mov	a, [hl]
 573 040e 9D F6                   		mov	r14, a
 574 0410 6A F6 02                		or	r14, #2
 575 0413 AD F4                   		movw	ax, r12
 576 0415 BD F2                   		movw	r10, ax
 577 0417 DA F2                   		movw	bc, r10
 578 0419 8D F6                   		mov	a, r14
 579 041b 48 00 00                		mov	[bc], a
 138:../src/r_cg_serial.c ****     ST0 |= _0008_SAU_CH3_STOP_TRG_ON | _0004_SAU_CH2_STOP_TRG_ON;    /* disable UART1 receive and t
 580                             		.loc 1 138 0
 581 041e C9 F6 24 01             		movw	r14, #292
 582 0422 C9 F4 24 01             		movw	r12, #292
 583 0426 AD F4                   		movw	ax, r12
 584 0428 BD F0                   		movw	r8, ax
 585 042a FA F0                   		movw	hl, r8
 586 042c AB                      		movw	ax, [hl]
 587 042d BD F4                   		movw	r12, ax
 588 042f 8D F4                   		mov	a, r12
 589 0431 6C 0C                   		or	a, #12
 590 0433 9D F2                   		mov	r10, a
 591 0435 8D F5                   		mov	a, r13
 592 0437 6C 00                   		or	a, #0
 593 0439 9D F3                   		mov	r11, a
 594 043b AD F6                   		movw	ax, r14
 595 043d BD F4                   		movw	r12, ax
 596 043f DA F4                   		movw	bc, r12
 597 0441 AD F2                   		movw	ax, r10
 598 0443 78 00 00                		movw	[bc], ax
 139:../src/r_cg_serial.c ****     SOE0 &= ~_0004_SAU_CH2_OUTPUT_ENABLE;    /* disable UART1 output */
 599                             		.loc 1 139 0
 600 0446 C9 F4 2A 01             		movw	r12, #298
 601 044a C9 F2 2A 01             		movw	r10, #298
 602 044e AD F2                   		movw	ax, r10
 603 0450 BD F0                   		movw	r8, ax
 604 0452 FA F0                   		movw	hl, r8
 605 0454 AB                      		movw	ax, [hl]
 606 0455 BD F2                   		movw	r10, ax
 607 0457 8D F2                   		mov	a, r10
 608 0459 5C FB                   		and	a, #-5
 609 045b 9D F0                   		mov	r8, a
 610 045d 8D F3                   		mov	a, r11
 611 045f 5C FF                   		and	a, #-1
 612 0461 9D F1                   		mov	r9, a
 613 0463 AD F4                   		movw	ax, r12
 614 0465 BD F2                   		movw	r10, ax
 615 0467 DA F2                   		movw	bc, r10
 616 0469 AD F0                   		movw	ax, r8
 617 046b 78 00 00                		movw	[bc], ax
 140:../src/r_cg_serial.c ****     STIF1 = 0U;    /* clear INTST1 interrupt flag */
 618                             		.loc 1 140 0
 619 046e C9 F0 E2 FF             		movw	r8, #-30
 620 0472 AD F0                   		movw	ax, r8
 621 0474 BD F4                   		movw	r12, ax
 622 0476 FA F4                   		movw	hl, r12
 623 0478 8B                      		mov	a, [hl]
 624 0479 9D F2                   		mov	r10, a
 625 047b 5A F2 FE                		and	r10, #-2
 626 047e AD F0                   		movw	ax, r8
 627 0480 DA F4                   		movw	bc, r12
 628 0482 8D F2                   		mov	a, r10
 629 0484 48 00 00                		mov	[bc], a
 141:../src/r_cg_serial.c ****     SRIF1 = 0U;    /* clear INTSR1 interrupt flag */
 630                             		.loc 1 141 0
 631 0487 C9 F0 E2 FF             		movw	r8, #-30
 632 048b AD F0                   		movw	ax, r8
 633 048d BD F4                   		movw	r12, ax
 634 048f FA F4                   		movw	hl, r12
 635 0491 8B                      		mov	a, [hl]
 636 0492 9D F2                   		mov	r10, a
 637 0494 5A F2 FD                		and	r10, #-3
 638 0497 AD F0                   		movw	ax, r8
 639 0499 DA F4                   		movw	bc, r12
 640 049b 8D F2                   		mov	a, r10
 641 049d 48 00 00                		mov	[bc], a
 142:../src/r_cg_serial.c ****    
 143:../src/r_cg_serial.c **** }
 642                             		.loc 1 143 0
 643 04a0 D7                      		ret
 644                             	.LFE3:
 646                             		.global	_R_UART1_Receive
 648                             	_R_UART1_Receive:
 649                             	.LFB4:
 144:../src/r_cg_serial.c **** 
 145:../src/r_cg_serial.c **** /**************************************************************************************************
 146:../src/r_cg_serial.c **** * Function Name: R_UART1_Receive
 147:../src/r_cg_serial.c **** * Description  : This function receives UART1 data.
 148:../src/r_cg_serial.c **** * Arguments    : rx_buf -
 149:../src/r_cg_serial.c **** *                    receive buffer pointer
 150:../src/r_cg_serial.c **** *                rx_num -
 151:../src/r_cg_serial.c **** *                    buffer size
 152:../src/r_cg_serial.c **** * Return Value : status -
 153:../src/r_cg_serial.c **** *                    MD_OK or MD_ARGERROR
 154:../src/r_cg_serial.c **** ***************************************************************************************************
 155:../src/r_cg_serial.c **** MD_STATUS R_UART1_Receive(uint8_t * const rx_buf, uint16_t rx_num)
 156:../src/r_cg_serial.c **** {
 650                             		.loc 1 156 0
 651                             		; start of function
 652                             		; locals: 2 bytes
 653 04a1 20 02                   		subw	sp, #2
 654                             	.LCFI2:
 157:../src/r_cg_serial.c ****     MD_STATUS status = MD_OK;
 655                             		.loc 1 157 0
 656 04a3 F6                      		clrw	ax
 657 04a4 B8 00                   		movw	[sp], ax
 158:../src/r_cg_serial.c **** 
 159:../src/r_cg_serial.c ****     if (rx_num < 1U)
 658                             		.loc 1 159 0
 659 04a6 A8 08                   		movw	ax, [sp+8]
 660 04a8 44 00 00                		cmpw	ax, #0
 661 04ab 61 E8                   		 skz
 662 04ad EC BA 04 00             		 br	!!.L6
 160:../src/r_cg_serial.c ****     {
 161:../src/r_cg_serial.c ****         status = MD_ARGERROR;
 663                             		.loc 1 161 0
 664 04b1 30 81 00                		movw	ax, #129
 665 04b4 B8 00                   		movw	[sp], ax
 666 04b6 EC CC 04 00             		br	!!.L7
 667                             	.L6:
 162:../src/r_cg_serial.c ****     }
 163:../src/r_cg_serial.c ****     else
 164:../src/r_cg_serial.c ****     {
 165:../src/r_cg_serial.c ****         g_uart1_rx_count = 0U;
 668                             		.loc 1 165 0
 669 04ba F6                      		clrw	ax
 670 04bb BF 00 00                		movw	!_g_uart1_rx_count, ax
 166:../src/r_cg_serial.c ****         g_uart1_rx_length = rx_num;
 671                             		.loc 1 166 0
 672 04be A8 08                   		movw	ax, [sp+8]
 673 04c0 BD F0                   		movw	r8, ax
 674 04c2 BF 00 00                		movw	!_g_uart1_rx_length, ax
 167:../src/r_cg_serial.c ****         gp_uart1_rx_address = rx_buf;
 675                             		.loc 1 167 0
 676 04c5 A8 06                   		movw	ax, [sp+6]
 677 04c7 BD F0                   		movw	r8, ax
 678 04c9 BF 00 00                		movw	!_gp_uart1_rx_address, ax
 679                             	.L7:
 168:../src/r_cg_serial.c ****     }
 169:../src/r_cg_serial.c **** 
 170:../src/r_cg_serial.c ****     return (status);
 680                             		.loc 1 170 0
 681 04cc A8 00                   		movw	ax, [sp]
 682 04ce BD F0                   		movw	r8, ax
 171:../src/r_cg_serial.c **** }
 683                             		.loc 1 171 0
 684 04d0 10 02                   		addw	sp, #2
 685 04d2 D7                      		ret
 686                             	.LFE4:
 688                             		.global	_R_UART1_Send
 690                             	_R_UART1_Send:
 691                             	.LFB5:
 172:../src/r_cg_serial.c **** 
 173:../src/r_cg_serial.c **** /**************************************************************************************************
 174:../src/r_cg_serial.c **** * Function Name: R_UART1_Send
 175:../src/r_cg_serial.c **** * Description  : This function sends UART1 data.
 176:../src/r_cg_serial.c **** * Arguments    : tx_buf -
 177:../src/r_cg_serial.c **** *                    transfer buffer pointer
 178:../src/r_cg_serial.c **** *                tx_num -
 179:../src/r_cg_serial.c **** *                    buffer size
 180:../src/r_cg_serial.c **** * Return Value : status -
 181:../src/r_cg_serial.c **** *                    MD_OK or MD_ARGERROR
 182:../src/r_cg_serial.c **** ***************************************************************************************************
 183:../src/r_cg_serial.c **** MD_STATUS R_UART1_Send(uint8_t * const tx_buf, uint16_t tx_num)
 184:../src/r_cg_serial.c **** {
 692                             		.loc 1 184 0
 693                             		; start of function
 694                             		; locals: 2 bytes
 695 04d3 20 02                   		subw	sp, #2
 696                             	.LCFI3:
 185:../src/r_cg_serial.c ****     MD_STATUS status = MD_OK;
 697                             		.loc 1 185 0
 698 04d5 F6                      		clrw	ax
 699 04d6 B8 00                   		movw	[sp], ax
 186:../src/r_cg_serial.c **** 
 187:../src/r_cg_serial.c ****     if (tx_num < 1U)
 700                             		.loc 1 187 0
 701 04d8 A8 08                   		movw	ax, [sp+8]
 702 04da 44 00 00                		cmpw	ax, #0
 703 04dd 61 E8                   		 skz
 704 04df EC EC 04 00             		 br	!!.L10
 188:../src/r_cg_serial.c ****     {
 189:../src/r_cg_serial.c ****         status = MD_ARGERROR;
 705                             		.loc 1 189 0
 706 04e3 30 81 00                		movw	ax, #129
 707 04e6 B8 00                   		movw	[sp], ax
 708 04e8 EC 5F 05 00             		br	!!.L11
 709                             	.L10:
 190:../src/r_cg_serial.c ****     }
 191:../src/r_cg_serial.c ****     else
 192:../src/r_cg_serial.c ****     {
 193:../src/r_cg_serial.c ****         gp_uart1_tx_address = tx_buf;
 710                             		.loc 1 193 0
 711 04ec A8 06                   		movw	ax, [sp+6]
 712 04ee BD F0                   		movw	r8, ax
 713 04f0 BF 00 00                		movw	!_gp_uart1_tx_address, ax
 194:../src/r_cg_serial.c ****         g_uart1_tx_count = tx_num;
 714                             		.loc 1 194 0
 715 04f3 A8 08                   		movw	ax, [sp+8]
 716 04f5 BD F0                   		movw	r8, ax
 717 04f7 BF 00 00                		movw	!_g_uart1_tx_count, ax
 195:../src/r_cg_serial.c ****         STMK1 = 1U;    /* disable INTST1 interrupt */
 718                             		.loc 1 195 0
 719 04fa C9 F0 E6 FF             		movw	r8, #-26
 720 04fe AD F0                   		movw	ax, r8
 721 0500 BD F4                   		movw	r12, ax
 722 0502 FA F4                   		movw	hl, r12
 723 0504 8B                      		mov	a, [hl]
 724 0505 9D F2                   		mov	r10, a
 725 0507 6A F2 01                		or	r10, #1
 726 050a AD F0                   		movw	ax, r8
 727 050c DA F4                   		movw	bc, r12
 728 050e 8D F2                   		mov	a, r10
 729 0510 48 00 00                		mov	[bc], a
 196:../src/r_cg_serial.c ****         TXD1 = *gp_uart1_tx_address;
 730                             		.loc 1 196 0
 731 0513 C9 F2 44 FF             		movw	r10, #-188
 732 0517 AF 00 00                		movw	ax, !_gp_uart1_tx_address
 733 051a BD F0                   		movw	r8, ax
 734 051c BD F4                   		movw	r12, ax
 735 051e FA F4                   		movw	hl, r12
 736 0520 8B                      		mov	a, [hl]
 737 0521 9D F0                   		mov	r8, a
 738 0523 AD F2                   		movw	ax, r10
 739 0525 BD F4                   		movw	r12, ax
 740 0527 DA F4                   		movw	bc, r12
 741 0529 8D F0                   		mov	a, r8
 742 052b 48 00 00                		mov	[bc], a
 197:../src/r_cg_serial.c ****         gp_uart1_tx_address++;
 743                             		.loc 1 197 0
 744 052e AF 00 00                		movw	ax, !_gp_uart1_tx_address
 745 0531 BD F0                   		movw	r8, ax
 746 0533 A6 F0                   		incw	r8
 747 0535 AD F0                   		movw	ax, r8
 748 0537 BF 00 00                		movw	!_gp_uart1_tx_address, ax
 198:../src/r_cg_serial.c ****         g_uart1_tx_count--;
 749                             		.loc 1 198 0
 750 053a AF 00 00                		movw	ax, !_g_uart1_tx_count
 751 053d BD F0                   		movw	r8, ax
 752 053f B6 F0                   		decw	r8
 753 0541 AD F0                   		movw	ax, r8
 754 0543 BF 00 00                		movw	!_g_uart1_tx_count, ax
 199:../src/r_cg_serial.c ****         STMK1 = 0U;    /* enable INTST1 interrupt */
 755                             		.loc 1 199 0
 756 0546 C9 F0 E6 FF             		movw	r8, #-26
 757 054a AD F0                   		movw	ax, r8
 758 054c BD F4                   		movw	r12, ax
 759 054e FA F4                   		movw	hl, r12
 760 0550 8B                      		mov	a, [hl]
 761 0551 9D F2                   		mov	r10, a
 762 0553 5A F2 FE                		and	r10, #-2
 763 0556 AD F0                   		movw	ax, r8
 764 0558 DA F4                   		movw	bc, r12
 765 055a 8D F2                   		mov	a, r10
 766 055c 48 00 00                		mov	[bc], a
 767                             	.L11:
 200:../src/r_cg_serial.c ****     }
 201:../src/r_cg_serial.c **** 
 202:../src/r_cg_serial.c ****     return (status);
 768                             		.loc 1 202 0
 769 055f A8 00                   		movw	ax, [sp]
 770 0561 BD F0                   		movw	r8, ax
 203:../src/r_cg_serial.c **** }
 771                             		.loc 1 203 0
 772 0563 10 02                   		addw	sp, #2
 773 0565 D7                      		ret
 774                             	.LFE5:
 858                             	.Letext0:
 859                             		.file 2 "../src/iodefine.h"
 860                             		.file 3 "../src/iodefine_ext.h"
 861                             		.file 4 "../src/r_cg_macrodriver.h"
