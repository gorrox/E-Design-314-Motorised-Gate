   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.section	.text.R_TAU0_Create,"ax",@progbits
  28                             		.global	_R_TAU0_Create
  30                             	_R_TAU0_Create:
  31                             	.LFB0:
  32                             		.file 1 "../src/r_cg_timer.c"
   1:../src/r_cg_timer.c **** /**************************************************************************************************
   2:../src/r_cg_timer.c **** * DISCLAIMER
   3:../src/r_cg_timer.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_timer.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_timer.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_timer.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_timer.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_timer.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_timer.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_timer.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_timer.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_timer.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_timer.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_timer.c **** * following link:
  15:../src/r_cg_timer.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_timer.c **** *
  17:../src/r_cg_timer.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_timer.c **** ***************************************************************************************************
  19:../src/r_cg_timer.c **** 
  20:../src/r_cg_timer.c **** /**************************************************************************************************
  21:../src/r_cg_timer.c **** * File Name    : r_cg_timer.c
  22:../src/r_cg_timer.c **** * Version      : CodeGenerator for RL78/G14 V2.04.02.01 [15 May 2015]
  23:../src/r_cg_timer.c **** * Device(s)    : R5F104LE
  24:../src/r_cg_timer.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_timer.c **** * Description  : This file implements device driver for TAU module.
  26:../src/r_cg_timer.c **** * Creation Date: 15-02-16
  27:../src/r_cg_timer.c **** ***************************************************************************************************
  28:../src/r_cg_timer.c **** 
  29:../src/r_cg_timer.c **** /**************************************************************************************************
  30:../src/r_cg_timer.c **** Includes
  31:../src/r_cg_timer.c **** ***************************************************************************************************
  32:../src/r_cg_timer.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_timer.c **** #include "r_cg_timer.h"
  34:../src/r_cg_timer.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_timer.c **** /* End user code. Do not edit comment generated here */
  36:../src/r_cg_timer.c **** #include "r_cg_userdefine.h"
  37:../src/r_cg_timer.c **** 
  38:../src/r_cg_timer.c **** /**************************************************************************************************
  39:../src/r_cg_timer.c **** Global variables and functions
  40:../src/r_cg_timer.c **** ***************************************************************************************************
  41:../src/r_cg_timer.c **** /* Start user code for global. Do not edit comment generated here */
  42:../src/r_cg_timer.c **** /* End user code. Do not edit comment generated here */
  43:../src/r_cg_timer.c **** 
  44:../src/r_cg_timer.c **** /**************************************************************************************************
  45:../src/r_cg_timer.c **** * Function Name: R_TAU0_Create
  46:../src/r_cg_timer.c **** * Description  : This function initializes the TAU0 module.
  47:../src/r_cg_timer.c **** * Arguments    : None
  48:../src/r_cg_timer.c **** * Return Value : None
  49:../src/r_cg_timer.c **** ***************************************************************************************************
  50:../src/r_cg_timer.c **** void R_TAU0_Create(void)
  51:../src/r_cg_timer.c **** {
  33                             		.loc 1 51 0
  52:../src/r_cg_timer.c ****     TAU0EN = 1U;    /* supplies input clock */
  34                             		.loc 1 52 0
  35 0000 71 00 F0 00             		set1	!240.0
  53:../src/r_cg_timer.c ****     TPS0 = _0004_TAU_CKM0_FCLK_4 | _0000_TAU_CKM1_FCLK_0 | _0000_TAU_CKM2_FCLK_1 | _0000_TAU_CKM3_F
  36                             		.loc 1 53 0
  37 0004 30 04 00                		movw	ax, #4
  38 0007 BF B6 01                		movw	!438, ax
  54:../src/r_cg_timer.c ****     /* Stop all channels */
  55:../src/r_cg_timer.c ****     TT0 = _0001_TAU_CH0_STOP_TRG_ON | _0002_TAU_CH1_STOP_TRG_ON | _0004_TAU_CH2_STOP_TRG_ON |
  39                             		.loc 1 55 0
  40 000a 30 0F 0A                		movw	ax, #2575
  41 000d BF B4 01                		movw	!436, ax
  56:../src/r_cg_timer.c ****           _0008_TAU_CH3_STOP_TRG_ON | _0200_TAU_CH1_H8_STOP_TRG_ON | _0800_TAU_CH3_H8_STOP_TRG_ON;
  57:../src/r_cg_timer.c ****     /* Mask channel 0 interrupt */
  58:../src/r_cg_timer.c ****     TMMK00 = 1U;    /* disable INTTM00 interrupt */
  42                             		.loc 1 58 0
  43 0010 71 40 E6 FF             		set1	!-26.4
  59:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
  44                             		.loc 1 59 0
  45 0014 71 48 E2 FF             		clr1	!-30.4
  60:../src/r_cg_timer.c ****     /* Mask channel 1 interrupt */
  61:../src/r_cg_timer.c ****     TMMK01 = 1U;    /* disable INTTM01 interrupt */
  46                             		.loc 1 61 0
  47 0018 71 50 E6 FF             		set1	!-26.5
  62:../src/r_cg_timer.c ****     TMIF01 = 0U;    /* clear INTTM01 interrupt flag */
  48                             		.loc 1 62 0
  49 001c 71 58 E2 FF             		clr1	!-30.5
  63:../src/r_cg_timer.c ****     /* Mask channel 1 higher 8 bits interrupt */
  64:../src/r_cg_timer.c ****     TMMK01H = 1U;    /* disable INTTM01H interrupt */
  50                             		.loc 1 64 0
  51 0020 71 70 E5 FF             		set1	!-27.7
  65:../src/r_cg_timer.c ****     TMIF01H = 0U;    /* clear INTTM01H interrupt flag */
  52                             		.loc 1 65 0
  53 0024 71 78 E1 FF             		clr1	!-31.7
  66:../src/r_cg_timer.c ****     /* Mask channel 2 interrupt */
  67:../src/r_cg_timer.c ****     TMMK02 = 1U;    /* disable INTTM02 interrupt */
  54                             		.loc 1 67 0
  55 0028 71 60 E6 FF             		set1	!-26.6
  68:../src/r_cg_timer.c ****     TMIF02 = 0U;    /* clear INTTM02 interrupt flag */
  56                             		.loc 1 68 0
  57 002c 71 68 E2 FF             		clr1	!-30.6
  69:../src/r_cg_timer.c ****     /* Mask channel 3 interrupt */
  70:../src/r_cg_timer.c ****     TMMK03 = 1U;    /* disable INTTM03 interrupt */
  58                             		.loc 1 70 0
  59 0030 71 70 E6 FF             		set1	!-26.7
  71:../src/r_cg_timer.c ****     TMIF03 = 0U;    /* clear INTTM03 interrupt flag */
  60                             		.loc 1 71 0
  61 0034 71 78 E2 FF             		clr1	!-30.7
  72:../src/r_cg_timer.c ****     /* Mask channel 3 higher 8 bits interrupt */
  73:../src/r_cg_timer.c ****     TMMK03H = 1U;    /* disable INTTM03H interrupt */
  62                             		.loc 1 73 0
  63 0038 71 20 E6 FF             		set1	!-26.2
  74:../src/r_cg_timer.c ****     TMIF03H = 0U;    /* clear INTTM03H interrupt flag */
  64                             		.loc 1 74 0
  65 003c 71 28 E2 FF             		clr1	!-30.2
  75:../src/r_cg_timer.c ****     /* Channel 0 used as interval timer */
  76:../src/r_cg_timer.c ****     TMR00 = _0000_TAU_CLOCK_SELECT_CKM0 | _0000_TAU_CLOCK_MODE_CKS | _0000_TAU_COMBINATION_SLAVE |
  66                             		.loc 1 76 0
  67 0040 F6                      		clrw	ax
  68 0041 BF 90 01                		movw	!400, ax
  77:../src/r_cg_timer.c ****             _0000_TAU_TRIGGER_SOFTWARE | _0000_TAU_MODE_INTERVAL_TIMER | _0000_TAU_START_INT_UNUSED
  78:../src/r_cg_timer.c ****     TDR00 = _F617_TAU_TDR00_VALUE;
  69                             		.loc 1 78 0
  70 0044 30 17 F6                		movw	ax, #-2537
  71 0047 BF 18 FF                		movw	!-232, ax
  79:../src/r_cg_timer.c ****     TO0 &= ~_0001_TAU_CH0_OUTPUT_VALUE_1;
  72                             		.loc 1 79 0
  73 004a AF B8 01                		movw	ax, !440
  74 004d BD F2                   		movw	r10, ax
  75 004f 60                      		mov	a, x
  76 0050 5C FE                   		and	a, #-2
  77 0052 9D F0                   		mov	r8, a
  78 0054 8D F3                   		mov	a, r11
  79 0056 9D F1                   		mov	r9, a
  80 0058 AD F0                   		movw	ax, r8
  81 005a BF B8 01                		movw	!440, ax
  80:../src/r_cg_timer.c ****     TOE0 &= ~_0001_TAU_CH0_OUTPUT_ENABLE;
  82                             		.loc 1 80 0
  83 005d AF BA 01                		movw	ax, !442
  84 0060 BD F2                   		movw	r10, ax
  85 0062 60                      		mov	a, x
  86 0063 5C FE                   		and	a, #-2
  87 0065 9D F0                   		mov	r8, a
  88 0067 8D F3                   		mov	a, r11
  89 0069 9D F1                   		mov	r9, a
  90 006b AD F0                   		movw	ax, r8
  91 006d BF BA 01                		movw	!442, ax
  81:../src/r_cg_timer.c **** }
  92                             		.loc 1 81 0
  93 0070 D7                      		ret
  94                             	.LFE0:
  96                             		.section	.text.R_TAU0_Channel0_Start,"ax",@progbits
  97                             		.global	_R_TAU0_Channel0_Start
  99                             	_R_TAU0_Channel0_Start:
 100                             	.LFB1:
  82:../src/r_cg_timer.c **** 
  83:../src/r_cg_timer.c **** /**************************************************************************************************
  84:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel0_Start
  85:../src/r_cg_timer.c **** * Description  : This function starts TAU0 channel 0 counter.
  86:../src/r_cg_timer.c **** * Arguments    : None
  87:../src/r_cg_timer.c **** * Return Value : None
  88:../src/r_cg_timer.c **** ***************************************************************************************************
  89:../src/r_cg_timer.c **** void R_TAU0_Channel0_Start(void)
  90:../src/r_cg_timer.c **** {
 101                             		.loc 1 90 0
  91:../src/r_cg_timer.c **** 
  92:../src/r_cg_timer.c ****     TS0 |= _0001_TAU_CH0_START_TRG_ON;
 102                             		.loc 1 92 0
 103 0000 AF B2 01                		movw	ax, !434
 104 0003 BD F2                   		movw	r10, ax
 105 0005 60                      		mov	a, x
 106 0006 6C 01                   		or	a, #1
 107 0008 9D F0                   		mov	r8, a
 108 000a 8D F3                   		mov	a, r11
 109 000c 9D F1                   		mov	r9, a
 110 000e AD F0                   		movw	ax, r8
 111 0010 BF B2 01                		movw	!434, ax
  93:../src/r_cg_timer.c ****     TMIF00 = 0U;    			// clear INTTM00 interrupt flag
 112                             		.loc 1 93 0
 113 0013 71 48 E2 FF             		clr1	!-30.4
  94:../src/r_cg_timer.c ****     TMMK00 = 0U;    			// enable INTTM00 interrupt
 114                             		.loc 1 94 0
 115 0017 71 48 E6 FF             		clr1	!-26.4
  95:../src/r_cg_timer.c **** }
 116                             		.loc 1 95 0
 117 001b D7                      		ret
 118                             	.LFE1:
 120                             		.section	.text.R_TAU0_Channel0_Stop,"ax",@progbits
 121                             		.global	_R_TAU0_Channel0_Stop
 123                             	_R_TAU0_Channel0_Stop:
 124                             	.LFB2:
  96:../src/r_cg_timer.c **** 
  97:../src/r_cg_timer.c **** /**************************************************************************************************
  98:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel0_Stop
  99:../src/r_cg_timer.c **** * Description  : This function stops TAU0 channel 0 counter.
 100:../src/r_cg_timer.c **** * Arguments    : None
 101:../src/r_cg_timer.c **** * Return Value : None
 102:../src/r_cg_timer.c **** ***************************************************************************************************
 103:../src/r_cg_timer.c **** void R_TAU0_Channel0_Stop(void)
 104:../src/r_cg_timer.c **** {
 125                             		.loc 1 104 0
 105:../src/r_cg_timer.c ****     TT0 |= _0001_TAU_CH0_STOP_TRG_ON;
 126                             		.loc 1 105 0
 127 0000 AF B4 01                		movw	ax, !436
 128 0003 BD F2                   		movw	r10, ax
 129 0005 60                      		mov	a, x
 130 0006 6C 01                   		or	a, #1
 131 0008 9D F0                   		mov	r8, a
 132 000a 8D F3                   		mov	a, r11
 133 000c 9D F1                   		mov	r9, a
 134 000e AD F0                   		movw	ax, r8
 135 0010 BF B4 01                		movw	!436, ax
 106:../src/r_cg_timer.c ****     /* Mask channel 0 interrupt */
 107:../src/r_cg_timer.c ****     TMMK00 = 1U;    			// disable INTTM00 interrupt
 136                             		.loc 1 107 0
 137 0013 71 40 E6 FF             		set1	!-26.4
 108:../src/r_cg_timer.c ****     TMIF00 = 0U;    			// clear INTTM00 interrupt flag
 138                             		.loc 1 108 0
 139 0017 71 48 E2 FF             		clr1	!-30.4
 109:../src/r_cg_timer.c **** }
 140                             		.loc 1 109 0
 141 001b D7                      		ret
 142                             	.LFE2:
 144                             		.comm	_uart1Status,2,2
 145                             		.comm	_uart1TxFlag,1,1
 146                             		.comm	_uart1TxCnt,2,2
 147                             		.comm	_uart1TxBuf,16,1
 148                             		.comm	_uart1RxOvrFlag,1,1
 149                             		.comm	_uart1RxErrFlag,1,1
 150                             		.comm	_uart1RxFlag,1,1
 151                             		.comm	_uart1RxCnt,2,2
 152                             		.comm	_uart1RxBuf,16,1
 195                             	.Letext0:
 196                             		.file 2 "../src/iodefine.h"
 197                             		.file 3 "../src/iodefine_ext.h"
 198                             		.file 4 "../src/r_cg_macrodriver.h"
 199                             		.file 5 "../src/my_globals.c"
