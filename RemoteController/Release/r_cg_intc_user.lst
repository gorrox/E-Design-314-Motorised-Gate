   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.section	.text.startTMR2,"ax",@progbits
  28                             		.global	_startTMR2
  30                             	_startTMR2:
  31                             	.LFB0:
  32                             		.file 1 "../src/r_cg_intc_user.c"
   1:../src/r_cg_intc_user.c **** /**************************************************************************************************
   2:../src/r_cg_intc_user.c **** * DISCLAIMER
   3:../src/r_cg_intc_user.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_intc_user.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_intc_user.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_intc_user.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_intc_user.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_intc_user.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_intc_user.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_intc_user.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_intc_user.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_intc_user.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_intc_user.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_intc_user.c **** * following link:
  15:../src/r_cg_intc_user.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_intc_user.c **** *
  17:../src/r_cg_intc_user.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_intc_user.c **** ***************************************************************************************************
  19:../src/r_cg_intc_user.c **** 
  20:../src/r_cg_intc_user.c **** /**************************************************************************************************
  21:../src/r_cg_intc_user.c **** * File Name    : r_cg_intc_user.c
  22:../src/r_cg_intc_user.c **** * Version      : CodeGenerator for RL78/G12 V2.03.02.01 [15 May 2015]
  23:../src/r_cg_intc_user.c **** * Device(s)    : R5F1026A
  24:../src/r_cg_intc_user.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_intc_user.c **** * Description  : This file implements device driver for INTC module.
  26:../src/r_cg_intc_user.c **** * Creation Date: 4/13/2016
  27:../src/r_cg_intc_user.c **** ***************************************************************************************************
  28:../src/r_cg_intc_user.c **** 
  29:../src/r_cg_intc_user.c **** /**************************************************************************************************
  30:../src/r_cg_intc_user.c **** Includes
  31:../src/r_cg_intc_user.c **** ***************************************************************************************************
  32:../src/r_cg_intc_user.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_intc_user.c **** #include "r_cg_intc.h"
  34:../src/r_cg_intc_user.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_intc_user.c **** #include "global.h"
  36:../src/r_cg_intc_user.c **** /* End user code. Do not edit comment generated here */
  37:../src/r_cg_intc_user.c **** #include "r_cg_userdefine.h"
  38:../src/r_cg_intc_user.c **** 
  39:../src/r_cg_intc_user.c **** /**************************************************************************************************
  40:../src/r_cg_intc_user.c **** Global variables and functions
  41:../src/r_cg_intc_user.c **** ***************************************************************************************************
  42:../src/r_cg_intc_user.c **** /* Start user code for global. Do not edit comment generated here */
  43:../src/r_cg_intc_user.c **** 
  44:../src/r_cg_intc_user.c **** // BUTTON LOGIC IS INVERTED
  45:../src/r_cg_intc_user.c **** void startTMR2(int delay)
  46:../src/r_cg_intc_user.c **** {
  33                             		.loc 1 46 0
  34                             	.LVL0:
  47:../src/r_cg_intc_user.c **** 	TMIF02 = 0U;					//clears the INTTMOO interrupt flag
  35                             		.loc 1 47 0
  36 0000 71 08 E2 FF             		clr1	!-30.0
  48:../src/r_cg_intc_user.c **** 	TDR02 = delay;          // 16000 will delay 1ms
  37                             		.loc 1 48 0
  38 0004 A8 04                   		movw	ax, [sp+4]
  39 0006 BF 64 FF                		movw	!-156, ax
  49:../src/r_cg_intc_user.c **** 	TS0 = 1U;
  40                             		.loc 1 49 0
  41 0009 E6                      		onew	ax
  42 000a BF B2 01                		movw	!434, ax
  50:../src/r_cg_intc_user.c **** }
  43                             		.loc 1 50 0
  44 000d D7                      		ret
  45                             	.LFE0:
  47                             		.section	.text.delayNoInt,"ax",@progbits
  48                             		.global	_delayNoInt
  50                             	_delayNoInt:
  51                             	.LFB1:
  51:../src/r_cg_intc_user.c **** void delayNoInt(uint16_t delay)
  52:../src/r_cg_intc_user.c **** {
  52                             		.loc 1 52 0
  53                             		; start of function
  54                             		; outgoing: 2 bytes
  55                             	.LVL1:
  56 0000 20 02                   		subw	sp, #2
  57                             	.LCFI0:
  53:../src/r_cg_intc_user.c **** 	startTMR2(delay);
  58                             		.loc 1 53 0
  59 0002 A8 06                   		movw	ax, [sp+6]
  60 0004 B8 00                   		movw	[sp], ax
  61 0006 FC 00 00 00             		call	!!%code(_startTMR2)
  62                             	.LVL2:
  63                             	.L3:
  54:../src/r_cg_intc_user.c **** 	while(TMIF02 == 0)
  64                             		.loc 1 54 0
  65 000a 8F E2 FF                		mov	a, !-30
  66 000d 5C 01                   		and	a, #1
  67 000f 9D F0                   		mov	r8, a
  68 0011 D4 F0                   		cmp0	r8
  69 0013 61 E8                   		 skz
  70 0015 EC 1E 00 00             		 br	!!.L6
  55:../src/r_cg_intc_user.c **** 		NOP();
  71                             		.loc 1 55 0
  72                             	 ; 55 "../src/r_cg_intc_user.c" 1
  73 0019 00                      		nop
  74                             	 ; 0 "" 2
  75 001a EC 0A 00 00             		br	!!.L3
  76                             	.L6:
  56:../src/r_cg_intc_user.c **** 	R_TAU0_Channel2_Stop();			//masks the interrupt
  77                             		.loc 1 56 0
  78 001e FC 00 00 00             		call	!!%code(_R_TAU0_Channel2_Stop)
  79                             	.LVL3:
  57:../src/r_cg_intc_user.c **** 	EI();
  80                             		.loc 1 57 0
  81                             	 ; 57 "../src/r_cg_intc_user.c" 1
  82 0022 71 7A FA                		ei
  83                             	 ; 0 "" 2
  58:../src/r_cg_intc_user.c **** }
  84                             		.loc 1 58 0
  85 0025 10 02                   		addw	sp, #2
  86 0027 D7                      		ret
  87                             	.LFE1:
  89                             		.section	.text.r_intc0_interrupt,"ax",@progbits
  90                             		.global	_r_intc0_interrupt
  92                             	_r_intc0_interrupt:
  93                             	.LFB2:
  59:../src/r_cg_intc_user.c **** 
  60:../src/r_cg_intc_user.c **** /* End user code. Do not edit comment generated here */
  61:../src/r_cg_intc_user.c **** 
  62:../src/r_cg_intc_user.c **** /**************************************************************************************************
  63:../src/r_cg_intc_user.c **** * Function Name: r_intc0_interrupt
  64:../src/r_cg_intc_user.c **** * Description  : This function is INTP0 interrupt service routine.
  65:../src/r_cg_intc_user.c **** * Arguments    : None
  66:../src/r_cg_intc_user.c **** * Return Value : None
  67:../src/r_cg_intc_user.c **** ***************************************************************************************************
  68:../src/r_cg_intc_user.c **** void r_intc0_interrupt(void)
  69:../src/r_cg_intc_user.c **** {
  94                             		.loc 1 69 0
  95                             		; start of function
  96                             		; push 8: ax bc de hl
  97 0000 61 CF                   		sel	rb0
  98 0002 C1                      		push	ax
  99                             	.LCFI1:
 100 0003 C3                      		push	bc
 101                             	.LCFI2:
 102 0004 C5                      		push	de
 103                             	.LCFI3:
 104 0005 C7                      		push	hl
 105                             	.LCFI4:
  70:../src/r_cg_intc_user.c ****     /* Start user code. Do not edit comment generated here */
  71:../src/r_cg_intc_user.c **** 
  72:../src/r_cg_intc_user.c **** 	// CLOSE GATE BUTTON TRIGGER
  73:../src/r_cg_intc_user.c **** 	btnCloseTrigger = 1;
 106                             		.loc 1 73 0
 107 0006 E5 00 00                		oneb	!_btnCloseTrigger
  74:../src/r_cg_intc_user.c ****     /* End user code. Do not edit comment generated here */
  75:../src/r_cg_intc_user.c **** }
 108                             		.loc 1 75 0
 109 0009 C6                      		pop	hl
 110 000a C4                      		pop	de
 111 000b C2                      		pop	bc
 112 000c C0                      		pop	ax
 113 000d 61 FC                   		reti
 114                             	.LFE2:
 116                             		.section	.text.r_intc1_interrupt,"ax",@progbits
 117                             		.global	_r_intc1_interrupt
 119                             	_r_intc1_interrupt:
 120                             	.LFB3:
  76:../src/r_cg_intc_user.c **** 
  77:../src/r_cg_intc_user.c **** /**************************************************************************************************
  78:../src/r_cg_intc_user.c **** * Function Name: r_intc1_interrupt
  79:../src/r_cg_intc_user.c **** * Description  : This function is INTP1 interrupt service routine.
  80:../src/r_cg_intc_user.c **** * Arguments    : None
  81:../src/r_cg_intc_user.c **** * Return Value : None
  82:../src/r_cg_intc_user.c **** ***************************************************************************************************
  83:../src/r_cg_intc_user.c **** void r_intc1_interrupt(void)
  84:../src/r_cg_intc_user.c **** {
 121                             		.loc 1 84 0
 122                             		; start of function
 123                             		; push 8: ax bc de hl
 124 0000 61 CF                   		sel	rb0
 125 0002 C1                      		push	ax
 126                             	.LCFI5:
 127 0003 C3                      		push	bc
 128                             	.LCFI6:
 129 0004 C5                      		push	de
 130                             	.LCFI7:
 131 0005 C7                      		push	hl
 132                             	.LCFI8:
  85:../src/r_cg_intc_user.c ****     /* Start user code. Do not edit comment generated here */
  86:../src/r_cg_intc_user.c **** 
  87:../src/r_cg_intc_user.c **** 	// OPEN GATE BUTTON TRIGGER
  88:../src/r_cg_intc_user.c **** 	btnOpenTrigger = 1;
 133                             		.loc 1 88 0
 134 0006 E5 00 00                		oneb	!_btnOpenTrigger
  89:../src/r_cg_intc_user.c ****     /* End user code. Do not edit comment generated here */
  90:../src/r_cg_intc_user.c **** }
 135                             		.loc 1 90 0
 136 0009 C6                      		pop	hl
 137 000a C4                      		pop	de
 138 000b C2                      		pop	bc
 139 000c C0                      		pop	ax
 140 000d 61 FC                   		reti
 141                             	.LFE3:
 143                             		.comm	_msg,2,2
 144                             		.comm	_tx,1,1
 145                             		.comm	_modulate,1,1
 146                             		.comm	_frameBase,2,2
 147                             		.comm	_btnCloseTrigger,1,1
 148                             		.comm	_btnOpenTrigger,1,1
 235                             	.Letext0:
 236                             		.file 2 "../src/iodefine.h"
 237                             		.file 3 "../src/r_cg_macrodriver.h"
 238                             		.file 4 "../src/global.h"
