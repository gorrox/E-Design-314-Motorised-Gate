   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.section	.text.R_TAU0_Create,"ax",@progbits
  28                             		.global	_R_TAU0_Create
  30                             	_R_TAU0_Create:
  31                             	.LFB0:
  32                             		.file 1 "../src/r_cg_timer.c"
   1:../src/r_cg_timer.c **** /**************************************************************************************************
   2:../src/r_cg_timer.c **** * DISCLAIMER
   3:../src/r_cg_timer.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_timer.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_timer.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_timer.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_timer.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_timer.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_timer.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_timer.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_timer.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_timer.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_timer.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_timer.c **** * following link:
  15:../src/r_cg_timer.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_timer.c **** *
  17:../src/r_cg_timer.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_timer.c **** ***************************************************************************************************
  19:../src/r_cg_timer.c **** 
  20:../src/r_cg_timer.c **** /**************************************************************************************************
  21:../src/r_cg_timer.c **** * File Name    : r_cg_timer.c
  22:../src/r_cg_timer.c **** * Version      : CodeGenerator for RL78/G12 V2.03.02.01 [15 May 2015]
  23:../src/r_cg_timer.c **** * Device(s)    : R5F1026A
  24:../src/r_cg_timer.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_timer.c **** * Description  : This file implements device driver for TAU module.
  26:../src/r_cg_timer.c **** * Creation Date: 4/13/2016
  27:../src/r_cg_timer.c **** ***************************************************************************************************
  28:../src/r_cg_timer.c **** 
  29:../src/r_cg_timer.c **** /**************************************************************************************************
  30:../src/r_cg_timer.c **** Includes
  31:../src/r_cg_timer.c **** ***************************************************************************************************
  32:../src/r_cg_timer.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_timer.c **** #include "r_cg_timer.h"
  34:../src/r_cg_timer.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_timer.c **** /* End user code. Do not edit comment generated here */
  36:../src/r_cg_timer.c **** #include "r_cg_userdefine.h"
  37:../src/r_cg_timer.c **** 
  38:../src/r_cg_timer.c **** /**************************************************************************************************
  39:../src/r_cg_timer.c **** Global variables and functions
  40:../src/r_cg_timer.c **** ***************************************************************************************************
  41:../src/r_cg_timer.c **** /* Start user code for global. Do not edit comment generated here */
  42:../src/r_cg_timer.c **** /* End user code. Do not edit comment generated here */
  43:../src/r_cg_timer.c **** 
  44:../src/r_cg_timer.c **** /**************************************************************************************************
  45:../src/r_cg_timer.c **** * Function Name: R_TAU0_Create
  46:../src/r_cg_timer.c **** * Description  : This function initializes the TAU0 module.
  47:../src/r_cg_timer.c **** * Arguments    : None
  48:../src/r_cg_timer.c **** * Return Value : None
  49:../src/r_cg_timer.c **** ***************************************************************************************************
  50:../src/r_cg_timer.c **** void R_TAU0_Create(void)
  51:../src/r_cg_timer.c **** {
  33                             		.loc 1 51 0
  52:../src/r_cg_timer.c ****     TAU0EN = 1U;    /* supplies input clock */
  34                             		.loc 1 52 0
  35 0000 71 00 F0 00             		set1	!240.0
  53:../src/r_cg_timer.c ****     TPS0 = _0000_TAU_CKM0_FCLK_0 | _0000_TAU_CKM1_FCLK_0 | _0000_TAU_CKM2_FCLK_1 | _0000_TAU_CKM3_F
  36                             		.loc 1 53 0
  37 0004 F6                      		clrw	ax
  38 0005 BF B6 01                		movw	!438, ax
  54:../src/r_cg_timer.c ****     /* Stop all channels */
  55:../src/r_cg_timer.c ****     TT0 = _0001_TAU_CH0_STOP_TRG_ON | _0002_TAU_CH1_STOP_TRG_ON | _0004_TAU_CH2_STOP_TRG_ON |
  39                             		.loc 1 55 0
  40 0008 30 0F 0A                		movw	ax, #2575
  41 000b BF B4 01                		movw	!436, ax
  56:../src/r_cg_timer.c ****           _0008_TAU_CH3_STOP_TRG_ON | _0200_TAU_CH1_H8_STOP_TRG_ON | _0800_TAU_CH3_H8_STOP_TRG_ON;
  57:../src/r_cg_timer.c ****     /* Mask channel 0 interrupt */
  58:../src/r_cg_timer.c ****     TMMK00 = 1U;    /* disable INTTM00 interrupt */
  42                             		.loc 1 58 0
  43 000e 71 60 E5 FF             		set1	!-27.6
  59:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
  44                             		.loc 1 59 0
  45 0012 71 68 E1 FF             		clr1	!-31.6
  60:../src/r_cg_timer.c ****     /* Mask channel 1 interrupt */
  61:../src/r_cg_timer.c ****     TMMK01 = 1U;    /* disable INTTM01 interrupt */
  46                             		.loc 1 61 0
  47 0016 71 70 E5 FF             		set1	!-27.7
  62:../src/r_cg_timer.c ****     TMIF01 = 0U;    /* clear INTTM01 interrupt flag */
  48                             		.loc 1 62 0
  49 001a 71 78 E1 FF             		clr1	!-31.7
  63:../src/r_cg_timer.c ****     /* Mask channel 1 higher 8 bits interrupt */
  64:../src/r_cg_timer.c ****     TMMK01H = 1U;    /* disable INTTM01H interrupt */
  50                             		.loc 1 64 0
  51 001e 71 30 E5 FF             		set1	!-27.3
  65:../src/r_cg_timer.c ****     TMIF01H = 0U;    /* clear INTTM01H interrupt flag */
  52                             		.loc 1 65 0
  53 0022 71 38 E1 FF             		clr1	!-31.3
  66:../src/r_cg_timer.c ****     /* Mask channel 2 interrupt */
  67:../src/r_cg_timer.c ****     TMMK02 = 1U;    /* disable INTTM02 interrupt */
  54                             		.loc 1 67 0
  55 0026 71 00 E6 FF             		set1	!-26.0
  68:../src/r_cg_timer.c ****     TMIF02 = 0U;    /* clear INTTM02 interrupt flag */
  56                             		.loc 1 68 0
  57 002a 71 08 E2 FF             		clr1	!-30.0
  69:../src/r_cg_timer.c ****     /* Mask channel 3 interrupt */
  70:../src/r_cg_timer.c ****     TMMK03 = 1U;    /* disable INTTM03 interrupt */
  58                             		.loc 1 70 0
  59 002e 71 10 E6 FF             		set1	!-26.1
  71:../src/r_cg_timer.c ****     TMIF03 = 0U;    /* clear INTTM03 interrupt flag */
  60                             		.loc 1 71 0
  61 0032 71 18 E2 FF             		clr1	!-30.1
  72:../src/r_cg_timer.c ****     /* Mask channel 3 higher 8 bits interrupt */
  73:../src/r_cg_timer.c ****     TMMK03H = 1U;    /* disable INTTM03H interrupt */
  62                             		.loc 1 73 0
  63 0036 71 40 E5 FF             		set1	!-27.4
  74:../src/r_cg_timer.c ****     TMIF03H = 0U;    /* clear INTTM03H interrupt flag */
  64                             		.loc 1 74 0
  65 003a 71 48 E1 FF             		clr1	!-31.4
  75:../src/r_cg_timer.c ****     /* Set INTTM00 low priority */
  76:../src/r_cg_timer.c ****     TMPR100 = 1U;
  66                             		.loc 1 76 0
  67 003e 71 60 ED FF             		set1	!-19.6
  77:../src/r_cg_timer.c ****     TMPR000 = 1U;
  68                             		.loc 1 77 0
  69 0042 71 60 E9 FF             		set1	!-23.6
  78:../src/r_cg_timer.c ****     /* Set INTTM01 low priority */
  79:../src/r_cg_timer.c ****     TMPR101 = 1U;
  70                             		.loc 1 79 0
  71 0046 71 70 ED FF             		set1	!-19.7
  80:../src/r_cg_timer.c ****     TMPR001 = 1U;
  72                             		.loc 1 80 0
  73 004a 71 70 E9 FF             		set1	!-23.7
  81:../src/r_cg_timer.c ****     /* Set INTTM02 low priority */
  82:../src/r_cg_timer.c ****     TMPR102 = 1U;
  74                             		.loc 1 82 0
  75 004e 71 00 EE FF             		set1	!-18.0
  83:../src/r_cg_timer.c ****     TMPR002 = 1U;
  76                             		.loc 1 83 0
  77 0052 71 00 EA FF             		set1	!-22.0
  84:../src/r_cg_timer.c ****     /* Set INTTM03 low priority */
  85:../src/r_cg_timer.c ****     TMPR103 = 1U;
  78                             		.loc 1 85 0
  79 0056 71 10 EE FF             		set1	!-18.1
  86:../src/r_cg_timer.c ****     TMPR003 = 1U;
  80                             		.loc 1 86 0
  81 005a 71 10 EA FF             		set1	!-22.1
  87:../src/r_cg_timer.c ****     /* Channel 0 is used as master channel for PWM output function */
  88:../src/r_cg_timer.c ****     TMR00 = _0000_TAU_CLOCK_SELECT_CKM0 | _0000_TAU_CLOCK_MODE_CKS | _0000_TAU_COMBINATION_MASTER |
  82                             		.loc 1 88 0
  83 005e E6                      		onew	ax
  84 005f BF 90 01                		movw	!400, ax
  89:../src/r_cg_timer.c ****             _0000_TAU_TRIGGER_SOFTWARE | _0001_TAU_MODE_PWM_MASTER;
  90:../src/r_cg_timer.c ****     TDR00 = _01A4_TAU_TDR00_VALUE;
  85                             		.loc 1 90 0
  86 0062 30 A4 01                		movw	ax, #420
  87 0065 BF 18 FF                		movw	!-232, ax
  91:../src/r_cg_timer.c ****     TO0 &= ~_0001_TAU_CH0_OUTPUT_VALUE_1;
  88                             		.loc 1 91 0
  89 0068 AF B8 01                		movw	ax, !440
  90 006b BD F2                   		movw	r10, ax
  91 006d 60                      		mov	a, x
  92 006e 5C FE                   		and	a, #-2
  93 0070 9D F0                   		mov	r8, a
  94 0072 8D F3                   		mov	a, r11
  95 0074 9D F1                   		mov	r9, a
  96 0076 AD F0                   		movw	ax, r8
  97 0078 BF B8 01                		movw	!440, ax
  92:../src/r_cg_timer.c ****     TOE0 &= ~_0001_TAU_CH0_OUTPUT_ENABLE;
  98                             		.loc 1 92 0
  99 007b AF BA 01                		movw	ax, !442
 100 007e BD F2                   		movw	r10, ax
 101 0080 60                      		mov	a, x
 102 0081 5C FE                   		and	a, #-2
 103 0083 9D F0                   		mov	r8, a
 104 0085 8D F3                   		mov	a, r11
 105 0087 9D F1                   		mov	r9, a
 106 0089 AD F0                   		movw	ax, r8
 107 008b BF BA 01                		movw	!442, ax
  93:../src/r_cg_timer.c ****     /* Channel 1 is used as slave channel for PWM output function */
  94:../src/r_cg_timer.c ****     TMR01 = _0000_TAU_CLOCK_SELECT_CKM0 | _0000_TAU_CLOCK_MODE_CKS | _0000_TAU_COMBINATION_SLAVE |
 108                             		.loc 1 94 0
 109 008e 30 09 04                		movw	ax, #1033
 110 0091 BF 92 01                		movw	!402, ax
  95:../src/r_cg_timer.c ****             _0400_TAU_TRIGGER_MASTER_INT | _0009_TAU_MODE_PWM_SLAVE;
  96:../src/r_cg_timer.c ****     TDR01 = _0069_TAU_TDR01_VALUE;
 111                             		.loc 1 96 0
 112 0094 30 69 00                		movw	ax, #105
 113 0097 BF 1A FF                		movw	!-230, ax
  97:../src/r_cg_timer.c ****     TOM0 |= _0002_TAU_CH1_OUTPUT_COMBIN;
 114                             		.loc 1 97 0
 115 009a AF BE 01                		movw	ax, !446
 116 009d BD F2                   		movw	r10, ax
 117 009f 60                      		mov	a, x
 118 00a0 6C 02                   		or	a, #2
 119 00a2 9D F0                   		mov	r8, a
 120 00a4 8D F3                   		mov	a, r11
 121 00a6 9D F1                   		mov	r9, a
 122 00a8 AD F0                   		movw	ax, r8
 123 00aa BF BE 01                		movw	!446, ax
  98:../src/r_cg_timer.c ****     TOL0 &= ~_0002_TAU_CH1_OUTPUT_LEVEL_L;
 124                             		.loc 1 98 0
 125 00ad AF BC 01                		movw	ax, !444
 126 00b0 BD F2                   		movw	r10, ax
 127 00b2 60                      		mov	a, x
 128 00b3 5C FD                   		and	a, #-3
 129 00b5 9D F0                   		mov	r8, a
 130 00b7 8D F3                   		mov	a, r11
 131 00b9 9D F1                   		mov	r9, a
 132 00bb AD F0                   		movw	ax, r8
 133 00bd BF BC 01                		movw	!444, ax
  99:../src/r_cg_timer.c ****     TO0 &= ~_0002_TAU_CH1_OUTPUT_VALUE_1;
 134                             		.loc 1 99 0
 135 00c0 AF B8 01                		movw	ax, !440
 136 00c3 BD F2                   		movw	r10, ax
 137 00c5 60                      		mov	a, x
 138 00c6 5C FD                   		and	a, #-3
 139 00c8 9D F0                   		mov	r8, a
 140 00ca 8D F3                   		mov	a, r11
 141 00cc 9D F1                   		mov	r9, a
 142 00ce AD F0                   		movw	ax, r8
 143 00d0 BF B8 01                		movw	!440, ax
 100:../src/r_cg_timer.c ****     TOE0 |= _0002_TAU_CH1_OUTPUT_ENABLE;
 144                             		.loc 1 100 0
 145 00d3 AF BA 01                		movw	ax, !442
 146 00d6 BD F2                   		movw	r10, ax
 147 00d8 60                      		mov	a, x
 148 00d9 6C 02                   		or	a, #2
 149 00db 9D F0                   		mov	r8, a
 150 00dd 8D F3                   		mov	a, r11
 151 00df 9D F1                   		mov	r9, a
 152 00e1 AD F0                   		movw	ax, r8
 153 00e3 BF BA 01                		movw	!442, ax
 101:../src/r_cg_timer.c ****     /* Channel 2 used as interval timer */
 102:../src/r_cg_timer.c ****     TMR02 = _0000_TAU_CLOCK_SELECT_CKM0 | _0000_TAU_CLOCK_MODE_CKS | _0000_TAU_COMBINATION_SLAVE |
 154                             		.loc 1 102 0
 155 00e6 F6                      		clrw	ax
 156 00e7 BF 94 01                		movw	!404, ax
 103:../src/r_cg_timer.c ****             _0000_TAU_TRIGGER_SOFTWARE | _0000_TAU_MODE_INTERVAL_TIMER | _0000_TAU_START_INT_UNUSED
 104:../src/r_cg_timer.c ****     TDR02 = _3E7F_TAU_TDR02_VALUE;
 157                             		.loc 1 104 0
 158 00ea 30 7F 3E                		movw	ax, #15999
 159 00ed BF 64 FF                		movw	!-156, ax
 105:../src/r_cg_timer.c ****     TOM0 &= ~_0004_TAU_CH2_OUTPUT_COMBIN;
 160                             		.loc 1 105 0
 161 00f0 AF BE 01                		movw	ax, !446
 162 00f3 BD F2                   		movw	r10, ax
 163 00f5 60                      		mov	a, x
 164 00f6 5C FB                   		and	a, #-5
 165 00f8 9D F0                   		mov	r8, a
 166 00fa 8D F3                   		mov	a, r11
 167 00fc 9D F1                   		mov	r9, a
 168 00fe AD F0                   		movw	ax, r8
 169 0100 BF BE 01                		movw	!446, ax
 106:../src/r_cg_timer.c ****     TOL0 &= ~_0004_TAU_CH2_OUTPUT_LEVEL_L;
 170                             		.loc 1 106 0
 171 0103 AF BC 01                		movw	ax, !444
 172 0106 BD F2                   		movw	r10, ax
 173 0108 60                      		mov	a, x
 174 0109 5C FB                   		and	a, #-5
 175 010b 9D F0                   		mov	r8, a
 176 010d 8D F3                   		mov	a, r11
 177 010f 9D F1                   		mov	r9, a
 178 0111 AD F0                   		movw	ax, r8
 179 0113 BF BC 01                		movw	!444, ax
 107:../src/r_cg_timer.c ****     TO0 &= ~_0004_TAU_CH2_OUTPUT_VALUE_1;
 180                             		.loc 1 107 0
 181 0116 AF B8 01                		movw	ax, !440
 182 0119 BD F2                   		movw	r10, ax
 183 011b 60                      		mov	a, x
 184 011c 5C FB                   		and	a, #-5
 185 011e 9D F0                   		mov	r8, a
 186 0120 8D F3                   		mov	a, r11
 187 0122 9D F1                   		mov	r9, a
 188 0124 AD F0                   		movw	ax, r8
 189 0126 BF B8 01                		movw	!440, ax
 108:../src/r_cg_timer.c ****     TOE0 &= ~_0004_TAU_CH2_OUTPUT_ENABLE;
 190                             		.loc 1 108 0
 191 0129 AF BA 01                		movw	ax, !442
 192 012c BD F2                   		movw	r10, ax
 193 012e 60                      		mov	a, x
 194 012f 5C FB                   		and	a, #-5
 195 0131 9D F0                   		mov	r8, a
 196 0133 8D F3                   		mov	a, r11
 197 0135 9D F1                   		mov	r9, a
 198 0137 AD F0                   		movw	ax, r8
 199 0139 BF BA 01                		movw	!442, ax
 109:../src/r_cg_timer.c ****     /* Channel 3 used as interval timer */
 110:../src/r_cg_timer.c ****     TMR03 = _0000_TAU_CLOCK_SELECT_CKM0 | _0000_TAU_CLOCK_MODE_CKS | _0000_TAU_16BITS_MODE |
 200                             		.loc 1 110 0
 201 013c F6                      		clrw	ax
 202 013d BF 96 01                		movw	!406, ax
 111:../src/r_cg_timer.c ****             _0000_TAU_TRIGGER_SOFTWARE | _0000_TAU_MODE_INTERVAL_TIMER | _0000_TAU_START_INT_UNUSED
 112:../src/r_cg_timer.c ****     TDR03 = _378F_TAU_TDR03_VALUE;
 203                             		.loc 1 112 0
 204 0140 30 8F 37                		movw	ax, #14223
 205 0143 BF 66 FF                		movw	!-154, ax
 113:../src/r_cg_timer.c ****     TOM0 &= ~_0008_TAU_CH3_OUTPUT_COMBIN;
 206                             		.loc 1 113 0
 207 0146 AF BE 01                		movw	ax, !446
 208 0149 BD F2                   		movw	r10, ax
 209 014b 60                      		mov	a, x
 210 014c 5C F7                   		and	a, #-9
 211 014e 9D F0                   		mov	r8, a
 212 0150 8D F3                   		mov	a, r11
 213 0152 9D F1                   		mov	r9, a
 214 0154 AD F0                   		movw	ax, r8
 215 0156 BF BE 01                		movw	!446, ax
 114:../src/r_cg_timer.c ****     TOL0 &= ~_0008_TAU_CH3_OUTPUT_LEVEL_L;
 216                             		.loc 1 114 0
 217 0159 AF BC 01                		movw	ax, !444
 218 015c BD F2                   		movw	r10, ax
 219 015e 60                      		mov	a, x
 220 015f 5C F7                   		and	a, #-9
 221 0161 9D F0                   		mov	r8, a
 222 0163 8D F3                   		mov	a, r11
 223 0165 9D F1                   		mov	r9, a
 224 0167 AD F0                   		movw	ax, r8
 225 0169 BF BC 01                		movw	!444, ax
 115:../src/r_cg_timer.c ****     TO0 &= ~_0008_TAU_CH3_OUTPUT_VALUE_1;
 226                             		.loc 1 115 0
 227 016c AF B8 01                		movw	ax, !440
 228 016f BD F2                   		movw	r10, ax
 229 0171 60                      		mov	a, x
 230 0172 5C F7                   		and	a, #-9
 231 0174 9D F0                   		mov	r8, a
 232 0176 8D F3                   		mov	a, r11
 233 0178 9D F1                   		mov	r9, a
 234 017a AD F0                   		movw	ax, r8
 235 017c BF B8 01                		movw	!440, ax
 116:../src/r_cg_timer.c ****     TOE0 &= ~_0008_TAU_CH3_OUTPUT_ENABLE;
 236                             		.loc 1 116 0
 237 017f AF BA 01                		movw	ax, !442
 238 0182 BD F2                   		movw	r10, ax
 239 0184 60                      		mov	a, x
 240 0185 5C F7                   		and	a, #-9
 241 0187 9D F0                   		mov	r8, a
 242 0189 8D F3                   		mov	a, r11
 243 018b 9D F1                   		mov	r9, a
 244 018d AD F0                   		movw	ax, r8
 245 018f BF BA 01                		movw	!442, ax
 117:../src/r_cg_timer.c ****     /* Set TO01 pin */
 118:../src/r_cg_timer.c ****     PMC1 &= 0xEFU;
 246                             		.loc 1 118 0
 247 0192 71 48 61 00             		clr1	!97.4
 119:../src/r_cg_timer.c ****     P1 &= 0xEFU;
 248                             		.loc 1 119 0
 249 0196 71 48 01 FF             		clr1	!-255.4
 120:../src/r_cg_timer.c ****     PM1 &= 0xEFU;
 250                             		.loc 1 120 0
 251 019a 71 48 21 FF             		clr1	!-223.4
 121:../src/r_cg_timer.c **** }
 252                             		.loc 1 121 0
 253 019e D7                      		ret
 254                             	.LFE0:
 256                             		.section	.text.R_TAU0_Channel0_Start,"ax",@progbits
 257                             		.global	_R_TAU0_Channel0_Start
 259                             	_R_TAU0_Channel0_Start:
 260                             	.LFB1:
 122:../src/r_cg_timer.c **** 
 123:../src/r_cg_timer.c **** /**************************************************************************************************
 124:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel0_Start
 125:../src/r_cg_timer.c **** * Description  : This function starts TAU0 channel 0 counter.
 126:../src/r_cg_timer.c **** * Arguments    : None
 127:../src/r_cg_timer.c **** * Return Value : None
 128:../src/r_cg_timer.c **** ***************************************************************************************************
 129:../src/r_cg_timer.c **** void R_TAU0_Channel0_Start(void)
 130:../src/r_cg_timer.c **** {
 261                             		.loc 1 130 0
 131:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
 262                             		.loc 1 131 0
 263 0000 71 68 E1 FF             		clr1	!-31.6
 132:../src/r_cg_timer.c ****     TMMK00 = 0U;    /* enable INTTM00 interrupt */
 264                             		.loc 1 132 0
 265 0004 71 68 E5 FF             		clr1	!-27.6
 133:../src/r_cg_timer.c ****     TMIF01 = 0U;    /* clear INTTM01 interrupt flag */
 266                             		.loc 1 133 0
 267 0008 71 78 E1 FF             		clr1	!-31.7
 134:../src/r_cg_timer.c ****     TMMK01 = 0U;    /* enable INTTM01 interrupt */
 268                             		.loc 1 134 0
 269 000c 71 78 E5 FF             		clr1	!-27.7
 135:../src/r_cg_timer.c ****     TOE0 |= _0002_TAU_CH1_OUTPUT_ENABLE;
 270                             		.loc 1 135 0
 271 0010 AF BA 01                		movw	ax, !442
 272 0013 BD F2                   		movw	r10, ax
 273 0015 60                      		mov	a, x
 274 0016 6C 02                   		or	a, #2
 275 0018 9D F0                   		mov	r8, a
 276 001a 8D F3                   		mov	a, r11
 277 001c 9D F1                   		mov	r9, a
 278 001e AD F0                   		movw	ax, r8
 279 0020 BF BA 01                		movw	!442, ax
 136:../src/r_cg_timer.c ****     TS0 |= _0001_TAU_CH0_START_TRG_ON | _0002_TAU_CH1_START_TRG_ON;
 280                             		.loc 1 136 0
 281 0023 AF B2 01                		movw	ax, !434
 282 0026 BD F2                   		movw	r10, ax
 283 0028 60                      		mov	a, x
 284 0029 6C 03                   		or	a, #3
 285 002b 9D F0                   		mov	r8, a
 286 002d 8D F3                   		mov	a, r11
 287 002f 9D F1                   		mov	r9, a
 288 0031 AD F0                   		movw	ax, r8
 289 0033 BF B2 01                		movw	!434, ax
 137:../src/r_cg_timer.c **** }
 290                             		.loc 1 137 0
 291 0036 D7                      		ret
 292                             	.LFE1:
 294                             		.section	.text.R_TAU0_Channel0_Stop,"ax",@progbits
 295                             		.global	_R_TAU0_Channel0_Stop
 297                             	_R_TAU0_Channel0_Stop:
 298                             	.LFB2:
 138:../src/r_cg_timer.c **** 
 139:../src/r_cg_timer.c **** /**************************************************************************************************
 140:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel0_Stop
 141:../src/r_cg_timer.c **** * Description  : This function stops TAU0 channel 0 counter.
 142:../src/r_cg_timer.c **** * Arguments    : None
 143:../src/r_cg_timer.c **** * Return Value : None
 144:../src/r_cg_timer.c **** ***************************************************************************************************
 145:../src/r_cg_timer.c **** void R_TAU0_Channel0_Stop(void)
 146:../src/r_cg_timer.c **** {
 299                             		.loc 1 146 0
 147:../src/r_cg_timer.c ****     TT0 |= _0001_TAU_CH0_STOP_TRG_ON | _0002_TAU_CH1_STOP_TRG_ON;
 300                             		.loc 1 147 0
 301 0000 AF B4 01                		movw	ax, !436
 302 0003 BD F2                   		movw	r10, ax
 303 0005 60                      		mov	a, x
 304 0006 6C 03                   		or	a, #3
 305 0008 9D F0                   		mov	r8, a
 306 000a 8D F3                   		mov	a, r11
 307 000c 9D F1                   		mov	r9, a
 308 000e AD F0                   		movw	ax, r8
 309 0010 BF B4 01                		movw	!436, ax
 148:../src/r_cg_timer.c ****     TOE0 &= ~_0002_TAU_CH1_OUTPUT_ENABLE;
 310                             		.loc 1 148 0
 311 0013 AF BA 01                		movw	ax, !442
 312 0016 BD F2                   		movw	r10, ax
 313 0018 60                      		mov	a, x
 314 0019 5C FD                   		and	a, #-3
 315 001b 9D F0                   		mov	r8, a
 316 001d 8D F3                   		mov	a, r11
 317 001f 9D F1                   		mov	r9, a
 318 0021 AD F0                   		movw	ax, r8
 319 0023 BF BA 01                		movw	!442, ax
 149:../src/r_cg_timer.c ****     /* Mask channel 0 interrupt */
 150:../src/r_cg_timer.c ****     TMMK00 = 1U;    /* disable INTTM00 interrupt */
 320                             		.loc 1 150 0
 321 0026 71 60 E5 FF             		set1	!-27.6
 151:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
 322                             		.loc 1 151 0
 323 002a 71 68 E1 FF             		clr1	!-31.6
 152:../src/r_cg_timer.c ****     /* Mask channel 1 interrupt */
 153:../src/r_cg_timer.c ****     TMMK01 = 1U;    /* disable INTTM01 interrupt */
 324                             		.loc 1 153 0
 325 002e 71 70 E5 FF             		set1	!-27.7
 154:../src/r_cg_timer.c ****     TMIF01 = 0U;    /* clear INTTM01 interrupt flag */
 326                             		.loc 1 154 0
 327 0032 71 78 E1 FF             		clr1	!-31.7
 155:../src/r_cg_timer.c **** }
 328                             		.loc 1 155 0
 329 0036 D7                      		ret
 330                             	.LFE2:
 332                             		.section	.text.R_TAU0_Channel2_Start,"ax",@progbits
 333                             		.global	_R_TAU0_Channel2_Start
 335                             	_R_TAU0_Channel2_Start:
 336                             	.LFB3:
 156:../src/r_cg_timer.c **** 
 157:../src/r_cg_timer.c **** /**************************************************************************************************
 158:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel2_Start
 159:../src/r_cg_timer.c **** * Description  : This function starts TAU0 channel 2 counter.
 160:../src/r_cg_timer.c **** * Arguments    : None
 161:../src/r_cg_timer.c **** * Return Value : None
 162:../src/r_cg_timer.c **** ***************************************************************************************************
 163:../src/r_cg_timer.c **** void R_TAU0_Channel2_Start(void)
 164:../src/r_cg_timer.c **** {
 337                             		.loc 1 164 0
 165:../src/r_cg_timer.c ****     TMIF02 = 0U;    /* clear INTTM02 interrupt flag */
 338                             		.loc 1 165 0
 339 0000 71 08 E2 FF             		clr1	!-30.0
 166:../src/r_cg_timer.c ****     TMMK02 = 0U;    /* enable INTTM02 interrupt */
 340                             		.loc 1 166 0
 341 0004 71 08 E6 FF             		clr1	!-26.0
 167:../src/r_cg_timer.c ****     TS0 |= _0004_TAU_CH2_START_TRG_ON;
 342                             		.loc 1 167 0
 343 0008 AF B2 01                		movw	ax, !434
 344 000b BD F2                   		movw	r10, ax
 345 000d 60                      		mov	a, x
 346 000e 6C 04                   		or	a, #4
 347 0010 9D F0                   		mov	r8, a
 348 0012 8D F3                   		mov	a, r11
 349 0014 9D F1                   		mov	r9, a
 350 0016 AD F0                   		movw	ax, r8
 351 0018 BF B2 01                		movw	!434, ax
 168:../src/r_cg_timer.c **** }
 352                             		.loc 1 168 0
 353 001b D7                      		ret
 354                             	.LFE3:
 356                             		.section	.text.R_TAU0_Channel2_Stop,"ax",@progbits
 357                             		.global	_R_TAU0_Channel2_Stop
 359                             	_R_TAU0_Channel2_Stop:
 360                             	.LFB4:
 169:../src/r_cg_timer.c **** 
 170:../src/r_cg_timer.c **** /**************************************************************************************************
 171:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel2_Stop
 172:../src/r_cg_timer.c **** * Description  : This function stops TAU0 channel 2 counter.
 173:../src/r_cg_timer.c **** * Arguments    : None
 174:../src/r_cg_timer.c **** * Return Value : None
 175:../src/r_cg_timer.c **** ***************************************************************************************************
 176:../src/r_cg_timer.c **** void R_TAU0_Channel2_Stop(void)
 177:../src/r_cg_timer.c **** {
 361                             		.loc 1 177 0
 178:../src/r_cg_timer.c ****     TT0 |= _0004_TAU_CH2_STOP_TRG_ON;
 362                             		.loc 1 178 0
 363 0000 AF B4 01                		movw	ax, !436
 364 0003 BD F2                   		movw	r10, ax
 365 0005 60                      		mov	a, x
 366 0006 6C 04                   		or	a, #4
 367 0008 9D F0                   		mov	r8, a
 368 000a 8D F3                   		mov	a, r11
 369 000c 9D F1                   		mov	r9, a
 370 000e AD F0                   		movw	ax, r8
 371 0010 BF B4 01                		movw	!436, ax
 179:../src/r_cg_timer.c ****     /* Mask channel 2 interrupt */
 180:../src/r_cg_timer.c ****     TMMK02 = 1U;    /* disable INTTM02 interrupt */
 372                             		.loc 1 180 0
 373 0013 71 00 E6 FF             		set1	!-26.0
 181:../src/r_cg_timer.c ****     TMIF02 = 0U;    /* clear INTTM02 interrupt flag */
 374                             		.loc 1 181 0
 375 0017 71 08 E2 FF             		clr1	!-30.0
 182:../src/r_cg_timer.c **** }
 376                             		.loc 1 182 0
 377 001b D7                      		ret
 378                             	.LFE4:
 380                             		.section	.text.R_TAU0_Channel3_Start,"ax",@progbits
 381                             		.global	_R_TAU0_Channel3_Start
 383                             	_R_TAU0_Channel3_Start:
 384                             	.LFB5:
 183:../src/r_cg_timer.c **** 
 184:../src/r_cg_timer.c **** /**************************************************************************************************
 185:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel3_Start
 186:../src/r_cg_timer.c **** * Description  : This function starts TAU0 channel 3 counter.
 187:../src/r_cg_timer.c **** * Arguments    : None
 188:../src/r_cg_timer.c **** * Return Value : None
 189:../src/r_cg_timer.c **** ***************************************************************************************************
 190:../src/r_cg_timer.c **** void R_TAU0_Channel3_Start(void)
 191:../src/r_cg_timer.c **** {
 385                             		.loc 1 191 0
 192:../src/r_cg_timer.c ****     TMIF03 = 0U;    /* clear INTTM03 interrupt flag */
 386                             		.loc 1 192 0
 387 0000 71 18 E2 FF             		clr1	!-30.1
 193:../src/r_cg_timer.c ****     TMMK03 = 0U;    /* enable INTTM03 interrupt */
 388                             		.loc 1 193 0
 389 0004 71 18 E6 FF             		clr1	!-26.1
 194:../src/r_cg_timer.c ****     TS0 |= _0008_TAU_CH3_START_TRG_ON;
 390                             		.loc 1 194 0
 391 0008 AF B2 01                		movw	ax, !434
 392 000b BD F2                   		movw	r10, ax
 393 000d 60                      		mov	a, x
 394 000e 6C 08                   		or	a, #8
 395 0010 9D F0                   		mov	r8, a
 396 0012 8D F3                   		mov	a, r11
 397 0014 9D F1                   		mov	r9, a
 398 0016 AD F0                   		movw	ax, r8
 399 0018 BF B2 01                		movw	!434, ax
 195:../src/r_cg_timer.c **** }
 400                             		.loc 1 195 0
 401 001b D7                      		ret
 402                             	.LFE5:
 404                             		.section	.text.R_TAU0_Channel3_Stop,"ax",@progbits
 405                             		.global	_R_TAU0_Channel3_Stop
 407                             	_R_TAU0_Channel3_Stop:
 408                             	.LFB6:
 196:../src/r_cg_timer.c **** 
 197:../src/r_cg_timer.c **** /**************************************************************************************************
 198:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel3_Stop
 199:../src/r_cg_timer.c **** * Description  : This function stops TAU0 channel 3 counter.
 200:../src/r_cg_timer.c **** * Arguments    : None
 201:../src/r_cg_timer.c **** * Return Value : None
 202:../src/r_cg_timer.c **** ***************************************************************************************************
 203:../src/r_cg_timer.c **** void R_TAU0_Channel3_Stop(void)
 204:../src/r_cg_timer.c **** {
 409                             		.loc 1 204 0
 205:../src/r_cg_timer.c ****     TT0 |= _0008_TAU_CH3_STOP_TRG_ON;
 410                             		.loc 1 205 0
 411 0000 AF B4 01                		movw	ax, !436
 412 0003 BD F2                   		movw	r10, ax
 413 0005 60                      		mov	a, x
 414 0006 6C 08                   		or	a, #8
 415 0008 9D F0                   		mov	r8, a
 416 000a 8D F3                   		mov	a, r11
 417 000c 9D F1                   		mov	r9, a
 418 000e AD F0                   		movw	ax, r8
 419 0010 BF B4 01                		movw	!436, ax
 206:../src/r_cg_timer.c ****     /* Mask channel 3 interrupt */
 207:../src/r_cg_timer.c ****     TMMK03 = 1U;    /* disable INTTM03 interrupt */
 420                             		.loc 1 207 0
 421 0013 71 10 E6 FF             		set1	!-26.1
 208:../src/r_cg_timer.c ****     TMIF03 = 0U;    /* clear INTTM03 interrupt flag */
 422                             		.loc 1 208 0
 423 0017 71 18 E2 FF             		clr1	!-30.1
 209:../src/r_cg_timer.c **** }
 424                             		.loc 1 209 0
 425 001b D7                      		ret
 426                             	.LFE6:
 502                             	.Letext0:
 503                             		.file 2 "../src/iodefine.h"
 504                             		.file 3 "../src/iodefine_ext.h"
