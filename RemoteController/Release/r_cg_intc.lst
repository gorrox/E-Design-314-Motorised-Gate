   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.section	.text.R_INTC_Create,"ax",@progbits
  28                             		.global	_R_INTC_Create
  30                             	_R_INTC_Create:
  31                             	.LFB0:
  32                             		.file 1 "../src/r_cg_intc.c"
   1:../src/r_cg_intc.c **** /**************************************************************************************************
   2:../src/r_cg_intc.c **** * DISCLAIMER
   3:../src/r_cg_intc.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_intc.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_intc.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_intc.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_intc.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_intc.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_intc.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_intc.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_intc.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_intc.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_intc.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_intc.c **** * following link:
  15:../src/r_cg_intc.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_intc.c **** *
  17:../src/r_cg_intc.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_intc.c **** ***************************************************************************************************
  19:../src/r_cg_intc.c **** 
  20:../src/r_cg_intc.c **** /**************************************************************************************************
  21:../src/r_cg_intc.c **** * File Name    : r_cg_intc.c
  22:../src/r_cg_intc.c **** * Version      : CodeGenerator for RL78/G12 V2.03.02.01 [15 May 2015]
  23:../src/r_cg_intc.c **** * Device(s)    : R5F1026A
  24:../src/r_cg_intc.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_intc.c **** * Description  : This file implements device driver for INTC module.
  26:../src/r_cg_intc.c **** * Creation Date: 4/13/2016
  27:../src/r_cg_intc.c **** ***************************************************************************************************
  28:../src/r_cg_intc.c **** 
  29:../src/r_cg_intc.c **** /**************************************************************************************************
  30:../src/r_cg_intc.c **** Includes
  31:../src/r_cg_intc.c **** ***************************************************************************************************
  32:../src/r_cg_intc.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_intc.c **** #include "r_cg_intc.h"
  34:../src/r_cg_intc.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_intc.c **** /* End user code. Do not edit comment generated here */
  36:../src/r_cg_intc.c **** #include "r_cg_userdefine.h"
  37:../src/r_cg_intc.c **** 
  38:../src/r_cg_intc.c **** /**************************************************************************************************
  39:../src/r_cg_intc.c **** Global variables and functions
  40:../src/r_cg_intc.c **** ***************************************************************************************************
  41:../src/r_cg_intc.c **** /* Start user code for global. Do not edit comment generated here */
  42:../src/r_cg_intc.c **** /* End user code. Do not edit comment generated here */
  43:../src/r_cg_intc.c **** 
  44:../src/r_cg_intc.c **** /**************************************************************************************************
  45:../src/r_cg_intc.c **** * Function Name: R_INTC_Create
  46:../src/r_cg_intc.c **** * Description  : This function initializes INTP module.
  47:../src/r_cg_intc.c **** * Arguments    : None
  48:../src/r_cg_intc.c **** * Return Value : None
  49:../src/r_cg_intc.c **** ***************************************************************************************************
  50:../src/r_cg_intc.c **** void R_INTC_Create(void)
  51:../src/r_cg_intc.c **** {
  33                             		.loc 1 51 0
  52:../src/r_cg_intc.c ****     PMK0 = 1U;    /* disable INTP0 operation */
  34                             		.loc 1 52 0
  35 0000 71 20 E4 FF             		set1	!-28.2
  53:../src/r_cg_intc.c ****     PIF0 = 0U;    /* clear INTP0 interrupt flag */
  36                             		.loc 1 53 0
  37 0004 71 28 E0 FF             		clr1	!-32.2
  54:../src/r_cg_intc.c ****     PMK1 = 1U;    /* disable INTP1 operation */
  38                             		.loc 1 54 0
  39 0008 71 30 E4 FF             		set1	!-28.3
  55:../src/r_cg_intc.c ****     PIF1 = 0U;    /* clear INTP1 interrupt flag */
  40                             		.loc 1 55 0
  41 000c 71 38 E0 FF             		clr1	!-32.3
  56:../src/r_cg_intc.c ****     PMK2 = 1U;    /* disable INTP2 operation */
  42                             		.loc 1 56 0
  43 0010 71 40 E4 FF             		set1	!-28.4
  57:../src/r_cg_intc.c ****     PIF2 = 0U;    /* clear INTP2 interrupt flag */
  44                             		.loc 1 57 0
  45 0014 71 48 E0 FF             		clr1	!-32.4
  58:../src/r_cg_intc.c ****     PMK3 = 1U;    /* disable INTP3 operation */
  46                             		.loc 1 58 0
  47 0018 71 50 E4 FF             		set1	!-28.5
  59:../src/r_cg_intc.c ****     PIF3 = 0U;    /* clear INTP3 interrupt flag */
  48                             		.loc 1 59 0
  49 001c 71 58 E0 FF             		clr1	!-32.5
  60:../src/r_cg_intc.c ****     /* Set INTP0 low priority */
  61:../src/r_cg_intc.c ****     PPR10 = 1U;
  50                             		.loc 1 61 0
  51 0020 71 20 EC FF             		set1	!-20.2
  62:../src/r_cg_intc.c ****     PPR00 = 1U;
  52                             		.loc 1 62 0
  53 0024 71 20 E8 FF             		set1	!-24.2
  63:../src/r_cg_intc.c ****     /* Set INTP1 low priority */
  64:../src/r_cg_intc.c ****     PPR11 = 1U;
  54                             		.loc 1 64 0
  55 0028 71 30 EC FF             		set1	!-20.3
  65:../src/r_cg_intc.c ****     PPR01 = 1U;
  56                             		.loc 1 65 0
  57 002c 71 30 E8 FF             		set1	!-24.3
  66:../src/r_cg_intc.c ****     EGN0 = _01_INTP0_EDGE_FALLING_SEL | _02_INTP1_EDGE_FALLING_SEL;
  58                             		.loc 1 66 0
  59 0030 CF 39 FF 03             		mov	!-199, #3
  67:../src/r_cg_intc.c ****     EGP0 = _01_INTP0_EDGE_RISING_SEL | _02_INTP1_EDGE_RISING_SEL;
  60                             		.loc 1 67 0
  61 0034 CF 38 FF 03             		mov	!-200, #3
  68:../src/r_cg_intc.c ****     /* Set INTP1 pin */
  69:../src/r_cg_intc.c ****     PMC4 &= 0xFDU;
  62                             		.loc 1 69 0
  63 0038 71 18 64 00             		clr1	!100.1
  70:../src/r_cg_intc.c ****     PM4 |= 0x02U;
  64                             		.loc 1 70 0
  65 003c 71 10 24 FF             		set1	!-220.1
  71:../src/r_cg_intc.c **** }
  66                             		.loc 1 71 0
  67 0040 D7                      		ret
  68                             	.LFE0:
  70                             		.section	.text.R_INTC0_Start,"ax",@progbits
  71                             		.global	_R_INTC0_Start
  73                             	_R_INTC0_Start:
  74                             	.LFB1:
  72:../src/r_cg_intc.c **** 
  73:../src/r_cg_intc.c **** /**************************************************************************************************
  74:../src/r_cg_intc.c **** * Function Name: R_INTC0_Start
  75:../src/r_cg_intc.c **** * Description  : This function clears INTP0 interrupt flag and enables interrupt.
  76:../src/r_cg_intc.c **** * Arguments    : None
  77:../src/r_cg_intc.c **** * Return Value : None
  78:../src/r_cg_intc.c **** ***************************************************************************************************
  79:../src/r_cg_intc.c **** void R_INTC0_Start(void)
  80:../src/r_cg_intc.c **** {
  75                             		.loc 1 80 0
  81:../src/r_cg_intc.c ****     PIF0 = 0U;    /* clear INTP0 interrupt flag */
  76                             		.loc 1 81 0
  77 0000 71 28 E0 FF             		clr1	!-32.2
  82:../src/r_cg_intc.c ****     PMK0 = 0U;    /* enable INTP0 interrupt */
  78                             		.loc 1 82 0
  79 0004 71 28 E4 FF             		clr1	!-28.2
  83:../src/r_cg_intc.c **** }
  80                             		.loc 1 83 0
  81 0008 D7                      		ret
  82                             	.LFE1:
  84                             		.section	.text.R_INTC0_Stop,"ax",@progbits
  85                             		.global	_R_INTC0_Stop
  87                             	_R_INTC0_Stop:
  88                             	.LFB2:
  84:../src/r_cg_intc.c **** 
  85:../src/r_cg_intc.c **** /**************************************************************************************************
  86:../src/r_cg_intc.c **** * Function Name: R_INTC0_Stop
  87:../src/r_cg_intc.c **** * Description  : This function disables INTP0 interrupt and clears interrupt flag.
  88:../src/r_cg_intc.c **** * Arguments    : None
  89:../src/r_cg_intc.c **** * Return Value : None
  90:../src/r_cg_intc.c **** ***************************************************************************************************
  91:../src/r_cg_intc.c **** void R_INTC0_Stop(void)
  92:../src/r_cg_intc.c **** {
  89                             		.loc 1 92 0
  93:../src/r_cg_intc.c ****     PMK0 = 1U;    /* disable INTP0 interrupt */
  90                             		.loc 1 93 0
  91 0000 71 20 E4 FF             		set1	!-28.2
  94:../src/r_cg_intc.c ****     PIF0 = 0U;    /* clear INTP0 interrupt flag */
  92                             		.loc 1 94 0
  93 0004 71 28 E0 FF             		clr1	!-32.2
  95:../src/r_cg_intc.c **** }
  94                             		.loc 1 95 0
  95 0008 D7                      		ret
  96                             	.LFE2:
  98                             		.section	.text.R_INTC1_Start,"ax",@progbits
  99                             		.global	_R_INTC1_Start
 101                             	_R_INTC1_Start:
 102                             	.LFB3:
  96:../src/r_cg_intc.c **** 
  97:../src/r_cg_intc.c **** /**************************************************************************************************
  98:../src/r_cg_intc.c **** * Function Name: R_INTC1_Start
  99:../src/r_cg_intc.c **** * Description  : This function clears INTP1 interrupt flag and enables interrupt.
 100:../src/r_cg_intc.c **** * Arguments    : None
 101:../src/r_cg_intc.c **** * Return Value : None
 102:../src/r_cg_intc.c **** ***************************************************************************************************
 103:../src/r_cg_intc.c **** void R_INTC1_Start(void)
 104:../src/r_cg_intc.c **** {
 103                             		.loc 1 104 0
 105:../src/r_cg_intc.c ****     PIF1 = 0U;    /* clear INTP1 interrupt flag */
 104                             		.loc 1 105 0
 105 0000 71 38 E0 FF             		clr1	!-32.3
 106:../src/r_cg_intc.c ****     PMK1 = 0U;    /* enable INTP1 interrupt */
 106                             		.loc 1 106 0
 107 0004 71 38 E4 FF             		clr1	!-28.3
 107:../src/r_cg_intc.c **** }
 108                             		.loc 1 107 0
 109 0008 D7                      		ret
 110                             	.LFE3:
 112                             		.section	.text.R_INTC1_Stop,"ax",@progbits
 113                             		.global	_R_INTC1_Stop
 115                             	_R_INTC1_Stop:
 116                             	.LFB4:
 108:../src/r_cg_intc.c **** 
 109:../src/r_cg_intc.c **** /**************************************************************************************************
 110:../src/r_cg_intc.c **** * Function Name: R_INTC1_Stop
 111:../src/r_cg_intc.c **** * Description  : This function disables INTP1 interrupt and clears interrupt flag.
 112:../src/r_cg_intc.c **** * Arguments    : None
 113:../src/r_cg_intc.c **** * Return Value : None
 114:../src/r_cg_intc.c **** ***************************************************************************************************
 115:../src/r_cg_intc.c **** void R_INTC1_Stop(void)
 116:../src/r_cg_intc.c **** {
 117                             		.loc 1 116 0
 117:../src/r_cg_intc.c ****     PMK1 = 1U;    /* disable INTP1 interrupt */
 118                             		.loc 1 117 0
 119 0000 71 30 E4 FF             		set1	!-28.3
 118:../src/r_cg_intc.c ****     PIF1 = 0U;    /* clear INTP1 interrupt flag */
 120                             		.loc 1 118 0
 121 0004 71 38 E0 FF             		clr1	!-32.3
 119:../src/r_cg_intc.c **** }
 122                             		.loc 1 119 0
 123 0008 D7                      		ret
 124                             	.LFE4:
 184                             	.Letext0:
 185                             		.file 2 "../src/iodefine.h"
 186                             		.file 3 "../src/iodefine_ext.h"
